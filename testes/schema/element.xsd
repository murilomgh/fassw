<types>
	<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
        targetNamespace="http://example.com/types"
        xmlns:t="http://example.com/types"
        elementFormDefault="qualified">
		
		<!-- exemplos de element com complexType embutido -->
		<xs:element name="note">
			<xs:complexType>
				<xs:sequence>
					<!-- exemplos de element com ref -->
					<xs:element ref="to"/>
					<xs:element ref="from"/>
					<xs:element ref="heading"/>
				</xs:sequence>
			</xs:complexType>
		</xs:element>

		<!-- exemplo de element com built-in datatype -->
		<xs:element name="to" type="xs:string"/>
		<!-- exemplos de element com block que previne elementos derivados por restriction -->
		<xs:element name="from" type="xs:string" block="restricao1 restricao2"/>
		<!-- exemplos de element com atributo final #all que previne todos os elementos derivados -->
		<xs:element name="heading" type="xs:string" final="#all"/>
		
		<!-- exemplo de element com simpleType embutido -->
		<xs:element name="age">
			<xs:simpleType>
				<xs:restriction base="xs:integer">
					<xs:minInclusive value="0"/>
					<xs:maxInclusive value="100"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:element>
		
		<!-- exemplo de element com substitutionGroup (NAO IMPLEMENTADO) -->
		<!-- <xs:element name="para" type="xs:string" substitutionGroup="to"/> -->
		
		<!-- usando um simpleContent, a seguinte declaracao de element contem um complexType que 
		define o conteudo do elemento como do tipo decimal com um unico atributo (sizing) -->
		<xs:element name="shoeSize">
			<xs:complexType>
				<xs:simpleContent>
					<xs:extension base="xs:decimal">
						<xs:attribute name="sizing">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="US"/>
									<xs:enumeration value="European"/>
									<xs:enumeration value="UK"/>
									<xs:enumeration value="Japan"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>
		</xs:element>
		
	</xs:schema>
 </types>