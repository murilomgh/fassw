/*
 wsmo4j - a WSMO API and Reference Implementation

 Copyright (c) 2004-2005, OntoText Lab. / SIRMA

 This library is free software; you can redistribute it and/or modify it under
 the terms of the GNU Lesser General Public License as published by the Free
 Software Foundation; either version 2.1 of the License, or (at your option)
 any later version.
 This library is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 details.
 You should have received a copy of the GNU Lesser General Public License along
 with this library; if not, write to the Free Software Foundation, Inc.,
 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

/**
 * <p>Title: WSMO4J</p>
 * <p>Description: WSMO API and a Reference Implementation</p>
 * <p>Copyright:  Copyright (c) 2004-2005</p>
 * <p>Company: OntoText Lab. / SIRMA </p>
 */

package com.ontotext.wsmo4j.parser.wsml;

import org.wsmo.wsml.compiler.analysis.*;
import org.wsmo.wsml.compiler.node.*; // the import will be used after code generation

/**
 * ASTAnalysis is code generated class by ASTAnalysisContainerGenerator
 * all changes bellow "DO NOT MODIFY THIS LINE OR THE GENERATED CODE BELLOW" will
 * NOT be persisted after the next code generation!
 * 
 * All AST analyser has to extend this class and register in ASTAnalysisContainer in
 * order to subscribe for events in syntactic tree.
 * 
 * @author not attributable
 *
 */
public class ASTAnalysis extends AnalysisAdapter {

    // Source code is generated by ASTAdapterContainerGenerator.java
    // DO NOT MODIFY THIS LINE OR THE GENERATED CODE BELLOW

    public void inStart(Start node) {
    }

    public void outStart(Start node) {
    }

    public void caseStart(Start node) {
    }

    public void inAVariableVariables(AVariableVariables node) {
    }

    public void outAVariableVariables(AVariableVariables node) {
    }

    public void caseAVariableVariables(AVariableVariables node) {
    }

    public void inACarriesconcept(ACarriesconcept node) {
    }

    public void outACarriesconcept(ACarriesconcept node) {
    }

    public void caseACarriesconcept(ACarriesconcept node) {
    }

    public void inAMultVal(AMultVal node) {
    }

    public void outAMultVal(AMultVal node) {
    }

    public void caseAMultVal(AMultVal node) {
    }

    public void inAActivitygroupGroup(AActivitygroupGroup node) {
    }

    public void outAActivitygroupGroup(AActivitygroupGroup node) {
    }

    public void caseAActivitygroupGroup(AActivitygroupGroup node) {
    }

    public void inADataTerm(ADataTerm node) {
    }

    public void outADataTerm(ADataTerm node) {
    }

    public void caseADataTerm(ADataTerm node) {
    }

    public void inAMemberof(AMemberof node) {
    }

    public void outAMemberof(AMemberof node) {
    }

    public void caseAMemberof(AMemberof node) {
    }

    public void inAAggregationNode(AAggregationNode node) {
    }

    public void outAAggregationNode(AAggregationNode node) {
    }

    public void caseAAggregationNode(AAggregationNode node) {
    }

    public void inAInterleavedAnykeyword(AInterleavedAnykeyword node) {
    }

    public void outAInterleavedAnykeyword(AInterleavedAnykeyword node) {
    }

    public void caseAInterleavedAnykeyword(AInterleavedAnykeyword node) {
    }

    public void inAGtCompOp(AGtCompOp node) {
    }

    public void outAGtCompOp(AGtCompOp node) {
    }

    public void caseAGtCompOp(AGtCompOp node) {
    }

    public void inAMoreperfs(AMoreperfs node) {
    }

    public void outAMoreperfs(AMoreperfs node) {
    }

    public void caseAMoreperfs(AMoreperfs node) {
    }

    public void inAMoreparamtype(AMoreparamtype node) {
    }

    public void outAMoreparamtype(AMoreparamtype node) {
    }

    public void caseAMoreparamtype(AMoreparamtype node) {
    }

    public void inAOneParamTermUpdates(AOneParamTermUpdates node) {
    }

    public void outAOneParamTermUpdates(AOneParamTermUpdates node) {
    }

    public void caseAOneParamTermUpdates(AOneParamTermUpdates node) {
    }

    public void inANamespaceAnykeyword(ANamespaceAnykeyword node) {
    }

    public void outANamespaceAnykeyword(ANamespaceAnykeyword node) {
    }

    public void caseANamespaceAnykeyword(ANamespaceAnykeyword node) {
    }

    public void inAIfRule(AIfRule node) {
    }

    public void outAIfRule(AIfRule node) {
    }

    public void caseAIfRule(AIfRule node) {
    }

    public void inASymmetricAnykeyword(ASymmetricAnykeyword node) {
    }

    public void outASymmetricAnykeyword(ASymmetricAnykeyword node) {
    }

    public void caseASymmetricAnykeyword(ASymmetricAnykeyword node) {
    }

    public void inAMin2perflist(AMin2perflist node) {
    }

    public void outAMin2perflist(AMin2perflist node) {
    }

    public void caseAMin2perflist(AMin2perflist node) {
    }

    public void inAAttribute(AAttribute node) {
    }

    public void outAAttribute(AAttribute node) {
    }

    public void caseAAttribute(AAttribute node) {
    }

    public void inASharedModeId(ASharedModeId node) {
    }

    public void outASharedModeId(ASharedModeId node) {
    }

    public void caseASharedModeId(ASharedModeId node) {
    }

    public void inAAttrFactList(AAttrFactList node) {
    }

    public void outAAttrFactList(AAttrFactList node) {
    }

    public void caseAAttrFactList(AAttrFactList node) {
    }

    public void inASymmetricAttributefeature(ASymmetricAttributefeature node) {
    }

    public void outASymmetricAttributefeature(ASymmetricAttributefeature node) {
    }

    public void caseASymmetricAttributefeature(ASymmetricAttributefeature node) {
    }

    public void inAPipedRulePipedRule(APipedRulePipedRule node) {
    }

    public void outAPipedRulePipedRule(APipedRulePipedRule node) {
    }

    public void caseAPipedRulePipedRule(APipedRulePipedRule node) {
    }

    public void inAExistsAnykeyword(AExistsAnykeyword node) {
    }

    public void outAExistsAnykeyword(AExistsAnykeyword node) {
    }

    public void caseAExistsAnykeyword(AExistsAnykeyword node) {
    }

    public void inAImportontologyAnykeyword(AImportontologyAnykeyword node) {
    }

    public void outAImportontologyAnykeyword(AImportontologyAnykeyword node) {
    }

    public void caseAImportontologyAnykeyword(AImportontologyAnykeyword node) {
    }

    public void inARelationOntologyElement(ARelationOntologyElement node) {
    }

    public void outARelationOntologyElement(ARelationOntologyElement node) {
    }

    public void caseARelationOntologyElement(ARelationOntologyElement node) {
    }

    public void inAActivityDiagram(AActivityDiagram node) {
    }

    public void outAActivityDiagram(AActivityDiagram node) {
    }

    public void caseAActivityDiagram(AActivityDiagram node) {
    }

    public void inAValuelistValuelist(AValuelistValuelist node) {
    }

    public void outAValuelistValuelist(AValuelistValuelist node) {
    }

    public void caseAValuelistValuelist(AValuelistValuelist node) {
    }

    public void inAEffectPrePostAssOrEff(AEffectPrePostAssOrEff node) {
    }

    public void outAEffectPrePostAssOrEff(AEffectPrePostAssOrEff node) {
    }

    public void caseAEffectPrePostAssOrEff(AEffectPrePostAssOrEff node) {
    }

    public void inADisjunction(ADisjunction node) {
    }

    public void outADisjunction(ADisjunction node) {
    }

    public void caseADisjunction(ADisjunction node) {
    }

    public void inAWebserviceDefinition(AWebserviceDefinition node) {
    }

    public void outAWebserviceDefinition(AWebserviceDefinition node) {
    }

    public void caseAWebserviceDefinition(AWebserviceDefinition node) {
    }

    public void inAOrchApplyMediationOrchPerformAlt(AOrchApplyMediationOrchPerformAlt node) {
    }

    public void outAOrchApplyMediationOrchPerformAlt(AOrchApplyMediationOrchPerformAlt node) {
    }

    public void caseAOrchApplyMediationOrchPerformAlt(AOrchApplyMediationOrchPerformAlt node) {
    }

    public void inADecimalNumber(ADecimalNumber node) {
    }

    public void outADecimalNumber(ADecimalNumber node) {
    }

    public void caseADecimalNumber(ADecimalNumber node) {
    }

    public void inAOrchPerformAchievegoalOrchPerformAlt(AOrchPerformAchievegoalOrchPerformAlt node) {
    }

    public void outAOrchPerformAchievegoalOrchPerformAlt(AOrchPerformAchievegoalOrchPerformAlt node) {
    }

    public void caseAOrchPerformAchievegoalOrchPerformAlt(AOrchPerformAchievegoalOrchPerformAlt node) {
    }

    public void inAVariableVariablelist(AVariableVariablelist node) {
    }

    public void outAVariableVariablelist(AVariableVariablelist node) {
    }

    public void caseAVariableVariablelist(AVariableVariablelist node) {
    }

    public void inACashewPerform(ACashewPerform node) {
    }

    public void outACashewPerform(ACashewPerform node) {
    }

    public void caseACashewPerform(ACashewPerform node) {
    }

    public void inASemisimple1AdditionArithVal(ASemisimple1AdditionArithVal node) {
    }

    public void outASemisimple1AdditionArithVal(ASemisimple1AdditionArithVal node) {
    }

    public void caseASemisimple1AdditionArithVal(ASemisimple1AdditionArithVal node) {
    }

    public void inAGgmediatorMediator(AGgmediatorMediator node) {
    }

    public void outAGgmediatorMediator(AGgmediatorMediator node) {
    }

    public void caseAGgmediatorMediator(AGgmediatorMediator node) {
    }

    public void inARelationModeModeEntry(ARelationModeModeEntry node) {
    }

    public void outARelationModeModeEntry(ARelationModeModeEntry node) {
    }

    public void caseARelationModeModeEntry(ARelationModeModeEntry node) {
    }

    public void inAUsesmediatorHeader(AUsesmediatorHeader node) {
    }

    public void outAUsesmediatorHeader(AUsesmediatorHeader node) {
    }

    public void caseAUsesmediatorHeader(AUsesmediatorHeader node) {
    }

    public void inAInvokeserviceAnykeyword(AInvokeserviceAnykeyword node) {
    }

    public void outAInvokeserviceAnykeyword(AInvokeserviceAnykeyword node) {
    }

    public void caseAInvokeserviceAnykeyword(AInvokeserviceAnykeyword node) {
    }

    public void inAPfmediator(APfmediator node) {
    }

    public void outAPfmediator(APfmediator node) {
    }

    public void caseAPfmediator(APfmediator node) {
    }

    public void inAUsesmediator(AUsesmediator node) {
    }

    public void outAUsesmediator(AUsesmediator node) {
    }

    public void caseAUsesmediator(AUsesmediator node) {
    }

    public void inARelationinstance(ARelationinstance node) {
    }

    public void outARelationinstance(ARelationinstance node) {
    }

    public void caseARelationinstance(ARelationinstance node) {
    }

    public void inACapabilityAnykeyword(ACapabilityAnykeyword node) {
    }

    public void outACapabilityAnykeyword(ACapabilityAnykeyword node) {
    }

    public void caseACapabilityAnykeyword(ACapabilityAnykeyword node) {
    }

    public void inAUnequalCompOp(AUnequalCompOp node) {
    }

    public void outAUnequalCompOp(AUnequalCompOp node) {
    }

    public void caseAUnequalCompOp(AUnequalCompOp node) {
    }

    public void inAImportsontologyHeader(AImportsontologyHeader node) {
    }

    public void outAImportsontologyHeader(AImportsontologyHeader node) {
    }

    public void caseAImportsontologyHeader(AImportsontologyHeader node) {
    }

    public void inAChoreography(AChoreography node) {
    }

    public void outAChoreography(AChoreography node) {
    }

    public void caseAChoreography(AChoreography node) {
    }

    public void inAUniversalTruthId(AUniversalTruthId node) {
    }

    public void outAUniversalTruthId(AUniversalTruthId node) {
    }

    public void caseAUniversalTruthId(AUniversalTruthId node) {
    }

    public void inAUnlessAnykeyword(AUnlessAnykeyword node) {
    }

    public void outAUnlessAnykeyword(AUnlessAnykeyword node) {
    }

    public void caseAUnlessAnykeyword(AUnlessAnykeyword node) {
    }

    public void inATransitions(ATransitions node) {
    }

    public void outATransitions(ATransitions node) {
    }

    public void caseATransitions(ATransitions node) {
    }

    public void inAObjectnodeNode(AObjectnodeNode node) {
    }

    public void outAObjectnodeNode(AObjectnodeNode node) {
    }

    public void caseAObjectnodeNode(AObjectnodeNode node) {
    }

    public void inAForallRule(AForallRule node) {
    }

    public void outAForallRule(AForallRule node) {
    }

    public void caseAForallRule(AForallRule node) {
    }

    public void inADeferreduntilAnykeyword(ADeferreduntilAnykeyword node) {
    }

    public void outADeferreduntilAnykeyword(ADeferreduntilAnykeyword node) {
    }

    public void caseADeferreduntilAnykeyword(ADeferreduntilAnykeyword node) {
    }

    public void inAEquivalentImplyOp(AEquivalentImplyOp node) {
    }

    public void outAEquivalentImplyOp(AEquivalentImplyOp node) {
    }

    public void caseAEquivalentImplyOp(AEquivalentImplyOp node) {
    }

    public void inAOftypeAnykeyword(AOftypeAnykeyword node) {
    }

    public void outAOftypeAnykeyword(AOftypeAnykeyword node) {
    }

    public void caseAOftypeAnykeyword(AOftypeAnykeyword node) {
    }

    public void inASubexprConjunction(ASubexprConjunction node) {
    }

    public void outASubexprConjunction(ASubexprConjunction node) {
    }

    public void caseASubexprConjunction(ASubexprConjunction node) {
    }

    public void inAMulMulOp(AMulMulOp node) {
    }

    public void outAMulMulOp(AMulMulOp node) {
    }

    public void caseAMulMulOp(AMulMulOp node) {
    }

    public void inAFiniteCardinalityCardinalityNumber(AFiniteCardinalityCardinalityNumber node) {
    }

    public void outAFiniteCardinalityCardinalityNumber(AFiniteCardinalityCardinalityNumber node) {
    }

    public void caseAFiniteCardinalityCardinalityNumber(AFiniteCardinalityCardinalityNumber node) {
    }

    public void inAControlflowEdge(AControlflowEdge node) {
    }

    public void outAControlflowEdge(AControlflowEdge node) {
    }

    public void caseAControlflowEdge(AControlflowEdge node) {
    }

    public void inAIntegerNumber(AIntegerNumber node) {
    }

    public void outAIntegerNumber(AIntegerNumber node) {
    }

    public void caseAIntegerNumber(AIntegerNumber node) {
    }

    public void inAWsml(AWsml node) {
    }

    public void outAWsml(AWsml node) {
    }

    public void caseAWsml(AWsml node) {
    }

    public void inAUpdateModifier(AUpdateModifier node) {
    }

    public void outAUpdateModifier(AUpdateModifier node) {
    }

    public void caseAUpdateModifier(AUpdateModifier node) {
    }

    public void inAMultipleSources(AMultipleSources node) {
    }

    public void outAMultipleSources(AMultipleSources node) {
    }

    public void caseAMultipleSources(AMultipleSources node) {
    }

    public void inARelationAnykeyword(ARelationAnykeyword node) {
    }

    public void outARelationAnykeyword(ARelationAnykeyword node) {
    }

    public void caseARelationAnykeyword(ARelationAnykeyword node) {
    }

    public void inARelationinstanceOntologyElement(ARelationinstanceOntologyElement node) {
    }

    public void outARelationinstanceOntologyElement(ARelationinstanceOntologyElement node) {
    }

    public void caseARelationinstanceOntologyElement(ARelationinstanceOntologyElement node) {
    }

    public void inAStartnodeAnykeyword(AStartnodeAnykeyword node) {
    }

    public void outAStartnodeAnykeyword(AStartnodeAnykeyword node) {
    }

    public void caseAStartnodeAnykeyword(AStartnodeAnykeyword node) {
    }

    public void inAWebserviceAnykeyword(AWebserviceAnykeyword node) {
    }

    public void outAWebserviceAnykeyword(AWebserviceAnykeyword node) {
    }

    public void caseAWebserviceAnykeyword(AWebserviceAnykeyword node) {
    }

    public void inADeferredchoiceWorkflowPattern(ADeferredchoiceWorkflowPattern node) {
    }

    public void outADeferredchoiceWorkflowPattern(ADeferredchoiceWorkflowPattern node) {
    }

    public void caseADeferredchoiceWorkflowPattern(ADeferredchoiceWorkflowPattern node) {
    }

    public void inANfpAnykeyword(ANfpAnykeyword node) {
    }

    public void outANfpAnykeyword(ANfpAnykeyword node) {
    }

    public void caseANfpAnykeyword(ANfpAnykeyword node) {
    }

    public void inAAtomPerformAchievegoalAtomPerformAlt(AAtomPerformAchievegoalAtomPerformAlt node) {
    }

    public void outAAtomPerformAchievegoalAtomPerformAlt(AAtomPerformAchievegoalAtomPerformAlt node) {
    }

    public void caseAAtomPerformAchievegoalAtomPerformAlt(AAtomPerformAchievegoalAtomPerformAlt node) {
    }

    public void inAOrchPerformOrchestrationRule(AOrchPerformOrchestrationRule node) {
    }

    public void outAOrchPerformOrchestrationRule(AOrchPerformOrchestrationRule node) {
    }

    public void caseAOrchPerformOrchestrationRule(AOrchPerformOrchestrationRule node) {
    }

    public void inAAdditionArithVal(AAdditionArithVal node) {
    }

    public void outAAdditionArithVal(AAdditionArithVal node) {
    }

    public void caseAAdditionArithVal(AAdditionArithVal node) {
    }

    public void inASimpleSubexpr(ASimpleSubexpr node) {
    }

    public void outASimpleSubexpr(ASimpleSubexpr node) {
    }

    public void caseASimpleSubexpr(ASimpleSubexpr node) {
    }

    public void inAArity(AArity node) {
    }

    public void outAArity(AArity node) {
    }

    public void caseAArity(AArity node) {
    }

    public void inAOrchPerformReceiveOrchPerformAlt(AOrchPerformReceiveOrchPerformAlt node) {
    }

    public void outAOrchPerformReceiveOrchPerformAlt(AOrchPerformReceiveOrchPerformAlt node) {
    }

    public void caseAOrchPerformReceiveOrchPerformAlt(AOrchPerformReceiveOrchPerformAlt node) {
    }

    public void inAConstraintLogExpr(AConstraintLogExpr node) {
    }

    public void outAConstraintLogExpr(AConstraintLogExpr node) {
    }

    public void caseAConstraintLogExpr(AConstraintLogExpr node) {
    }

    public void inAMinterfaces(AMinterfaces node) {
    }

    public void outAMinterfaces(AMinterfaces node) {
    }

    public void caseAMinterfaces(AMinterfaces node) {
    }

    public void inASequentialAnykeyword(ASequentialAnykeyword node) {
    }

    public void outASequentialAnykeyword(ASequentialAnykeyword node) {
    }

    public void caseASequentialAnykeyword(ASequentialAnykeyword node) {
    }

    public void inAUntilWorkflowPattern(AUntilWorkflowPattern node) {
    }

    public void outAUntilWorkflowPattern(AUntilWorkflowPattern node) {
    }

    public void caseAUntilWorkflowPattern(AUntilWorkflowPattern node) {
    }

    public void inASendeventactionAnykeyword(ASendeventactionAnykeyword node) {
    }

    public void outASendeventactionAnykeyword(ASendeventactionAnykeyword node) {
    }

    public void caseASendeventactionAnykeyword(ASendeventactionAnykeyword node) {
    }

    public void inAFlowfinalNode(AFlowfinalNode node) {
    }

    public void outAFlowfinalNode(AFlowfinalNode node) {
    }

    public void caseAFlowfinalNode(AFlowfinalNode node) {
    }

    public void inAMultipleInterfaces(AMultipleInterfaces node) {
    }

    public void outAMultipleInterfaces(AMultipleInterfaces node) {
    }

    public void caseAMultipleInterfaces(AMultipleInterfaces node) {
    }

    public void inATermlist(ATermlist node) {
    }

    public void outATermlist(ATermlist node) {
    }

    public void caseATermlist(ATermlist node) {
    }

    public void inAModeEntryModeEntryList(AModeEntryModeEntryList node) {
    }

    public void outAModeEntryModeEntryList(AModeEntryModeEntryList node) {
    }

    public void caseAModeEntryModeEntryList(AModeEntryModeEntryList node) {
    }

    public void inAParamtyping(AParamtyping node) {
    }

    public void outAParamtyping(AParamtyping node) {
    }

    public void caseAParamtyping(AParamtyping node) {
    }

    public void inASourceAnykeyword(ASourceAnykeyword node) {
    }

    public void outASourceAnykeyword(ASourceAnykeyword node) {
    }

    public void caseASourceAnykeyword(ASourceAnykeyword node) {
    }

    public void inAPpmediatorMediator(APpmediatorMediator node) {
    }

    public void outAPpmediatorMediator(APpmediatorMediator node) {
    }

    public void caseAPpmediatorMediator(APpmediatorMediator node) {
    }

    public void inAModeEntryListModeEntryList(AModeEntryListModeEntryList node) {
    }

    public void outAModeEntryListModeEntryList(AModeEntryListModeEntryList node) {
    }

    public void caseAModeEntryListModeEntryList(AModeEntryListModeEntryList node) {
    }

    public void inAMorevalues(AMorevalues node) {
    }

    public void outAMorevalues(AMorevalues node) {
    }

    public void caseAMorevalues(AMorevalues node) {
    }

    public void inAStartnode(AStartnode node) {
    }

    public void outAStartnode(AStartnode node) {
    }

    public void caseAStartnode(AStartnode node) {
    }

    public void inAImpliedbyImplyOp(AImpliedbyImplyOp node) {
    }

    public void outAImpliedbyImplyOp(AImpliedbyImplyOp node) {
    }

    public void caseAImpliedbyImplyOp(AImpliedbyImplyOp node) {
    }

    public void inAOutputpinPin(AOutputpinPin node) {
    }

    public void outAOutputpinPin(AOutputpinPin node) {
    }

    public void caseAOutputpinPin(AOutputpinPin node) {
    }

    public void inAInterface(AInterface node) {
    }

    public void outAInterface(AInterface node) {
    }

    public void caseAInterface(AInterface node) {
    }

    public void inAStringValue(AStringValue node) {
    }

    public void outAStringValue(AStringValue node) {
    }

    public void caseAStringValue(AStringValue node) {
    }

    public void inAIriIrilist(AIriIrilist node) {
    }

    public void outAIriIrilist(AIriIrilist node) {
    }

    public void caseAIriIrilist(AIriIrilist node) {
    }

    public void inASendeventactionNode(ASendeventactionNode node) {
    }

    public void outASendeventactionNode(ASendeventactionNode node) {
    }

    public void caseASendeventactionNode(ASendeventactionNode node) {
    }

    public void inADeferredwhileAnykeyword(ADeferredwhileAnykeyword node) {
    }

    public void outADeferredwhileAnykeyword(ADeferredwhileAnykeyword node) {
    }

    public void caseADeferredwhileAnykeyword(ADeferredwhileAnykeyword node) {
    }

    public void inAStrongEqualCompOp(AStrongEqualCompOp node) {
    }

    public void outAStrongEqualCompOp(AStrongEqualCompOp node) {
    }

    public void caseAStrongEqualCompOp(AStrongEqualCompOp node) {
    }

    public void inANfpAxiomAxiomdefinition(ANfpAxiomAxiomdefinition node) {
    }

    public void outANfpAxiomAxiomdefinition(ANfpAxiomAxiomdefinition node) {
    }

    public void caseANfpAxiomAxiomdefinition(ANfpAxiomAxiomdefinition node) {
    }

    public void inADecisionAnykeyword(ADecisionAnykeyword node) {
    }

    public void outADecisionAnykeyword(ADecisionAnykeyword node) {
    }

    public void caseADecisionAnykeyword(ADecisionAnykeyword node) {
    }

    public void inAPerformAnykeyword(APerformAnykeyword node) {
    }

    public void outAPerformAnykeyword(APerformAnykeyword node) {
    }

    public void caseAPerformAnykeyword(APerformAnykeyword node) {
    }

    public void inAIf(AIf node) {
    }

    public void outAIf(AIf node) {
    }

    public void caseAIf(AIf node) {
    }

    public void inAConcurrentWorkflowPattern(AConcurrentWorkflowPattern node) {
    }

    public void outAConcurrentWorkflowPattern(AConcurrentWorkflowPattern node) {
    }

    public void caseAConcurrentWorkflowPattern(AConcurrentWorkflowPattern node) {
    }

    public void inAFlowstartNode(AFlowstartNode node) {
    }

    public void outAFlowstartNode(AFlowstartNode node) {
    }

    public void caseAFlowstartNode(AFlowstartNode node) {
    }

    public void inASharedvariableAnykeyword(ASharedvariableAnykeyword node) {
    }

    public void outASharedvariableAnykeyword(ASharedvariableAnykeyword node) {
    }

    public void caseASharedvariableAnykeyword(ASharedvariableAnykeyword node) {
    }

    public void inAUsemediatorAnykeyword(AUsemediatorAnykeyword node) {
    }

    public void outAUsemediatorAnykeyword(AUsemediatorAnykeyword node) {
    }

    public void caseAUsemediatorAnykeyword(AUsemediatorAnykeyword node) {
    }

    public void inALtCompOp(ALtCompOp node) {
    }

    public void outALtCompOp(ALtCompOp node) {
    }

    public void caseALtCompOp(ALtCompOp node) {
    }

    public void inAWebservice(AWebservice node) {
    }

    public void outAWebservice(AWebservice node) {
    }

    public void caseAWebservice(AWebservice node) {
    }

    public void inAOtherExpressionLogExpr(AOtherExpressionLogExpr node) {
    }

    public void outAOtherExpressionLogExpr(AOtherExpressionLogExpr node) {
    }

    public void caseAOtherExpressionLogExpr(AOtherExpressionLogExpr node) {
    }

    public void inAOrchAsmOrchestrationFormalism(AOrchAsmOrchestrationFormalism node) {
    }

    public void outAOrchAsmOrchestrationFormalism(AOrchAsmOrchestrationFormalism node) {
    }

    public void caseAOrchAsmOrchestrationFormalism(AOrchAsmOrchestrationFormalism node) {
    }

    public void inAMoveTermUpdate(AMoveTermUpdate node) {
    }

    public void outAMoveTermUpdate(AMoveTermUpdate node) {
    }

    public void caseAMoveTermUpdate(AMoveTermUpdate node) {
    }

    public void inADataflowMediators(ADataflowMediators node) {
    }

    public void outADataflowMediators(ADataflowMediators node) {
    }

    public void caseADataflowMediators(ADataflowMediators node) {
    }

    public void inAConceptOntologyElement(AConceptOntologyElement node) {
    }

    public void outAConceptOntologyElement(AConceptOntologyElement node) {
    }

    public void caseAConceptOntologyElement(AConceptOntologyElement node) {
    }

    public void inAAxiomAnykeyword(AAxiomAnykeyword node) {
    }

    public void outAAxiomAnykeyword(AAxiomAnykeyword node) {
    }

    public void caseAAxiomAnykeyword(AAxiomAnykeyword node) {
    }

    public void inAOrchUpdatesOrchestrationRule(AOrchUpdatesOrchestrationRule node) {
    }

    public void outAOrchUpdatesOrchestrationRule(AOrchUpdatesOrchestrationRule node) {
    }

    public void caseAOrchUpdatesOrchestrationRule(AOrchUpdatesOrchestrationRule node) {
    }

    public void inAAttrRelationAttrRelList(AAttrRelationAttrRelList node) {
    }

    public void outAAttrRelationAttrRelList(AAttrRelationAttrRelList node) {
    }

    public void caseAAttrRelationAttrRelList(AAttrRelationAttrRelList node) {
    }

    public void inAUniversalFalsehoodId(AUniversalFalsehoodId node) {
    }

    public void outAUniversalFalsehoodId(AUniversalFalsehoodId node) {
    }

    public void caseAUniversalFalsehoodId(AUniversalFalsehoodId node) {
    }

    public void inAAttrValAttrRelation(AAttrValAttrRelation node) {
    }

    public void outAAttrValAttrRelation(AAttrValAttrRelation node) {
    }

    public void caseAAttrValAttrRelation(AAttrValAttrRelation node) {
    }

    public void inARepeatAnykeyword(ARepeatAnykeyword node) {
    }

    public void outARepeatAnykeyword(ARepeatAnykeyword node) {
    }

    public void caseARepeatAnykeyword(ARepeatAnykeyword node) {
    }

    public void inATransitiveAnykeyword(ATransitiveAnykeyword node) {
    }

    public void outATransitiveAnykeyword(ATransitiveAnykeyword node) {
    }

    public void caseATransitiveAnykeyword(ATransitiveAnykeyword node) {
    }

    public void inADivMulOp(ADivMulOp node) {
    }

    public void outADivMulOp(ADivMulOp node) {
    }

    public void caseADivMulOp(ADivMulOp node) {
    }

    public void inALpRuleLogExpr(ALpRuleLogExpr node) {
    }

    public void outALpRuleLogExpr(ALpRuleLogExpr node) {
    }

    public void caseALpRuleLogExpr(ALpRuleLogExpr node) {
    }

    public void inAPpmediator(APpmediator node) {
    }

    public void outAPpmediator(APpmediator node) {
    }

    public void caseAPpmediator(APpmediator node) {
    }

    public void inADeferredwhileWorkflowPattern(ADeferredwhileWorkflowPattern node) {
    }

    public void outADeferredwhileWorkflowPattern(ADeferredwhileWorkflowPattern node) {
    }

    public void caseADeferredwhileWorkflowPattern(ADeferredwhileWorkflowPattern node) {
    }

    public void inAUnivfalseAnykeyword(AUnivfalseAnykeyword node) {
    }

    public void outAUnivfalseAnykeyword(AUnivfalseAnykeyword node) {
    }

    public void caseAUnivfalseAnykeyword(AUnivfalseAnykeyword node) {
    }

    public void inASimpleAdditionArithVal(ASimpleAdditionArithVal node) {
    }

    public void outASimpleAdditionArithVal(ASimpleAdditionArithVal node) {
    }

    public void caseASimpleAdditionArithVal(ASimpleAdditionArithVal node) {
    }

    public void inADeferredchoiceAnykeyword(ADeferredchoiceAnykeyword node) {
    }

    public void outADeferredchoiceAnykeyword(ADeferredchoiceAnykeyword node) {
    }

    public void caseADeferredchoiceAnykeyword(ADeferredchoiceAnykeyword node) {
    }

    public void inATermTerms(ATermTerms node) {
    }

    public void outATermTerms(ATermTerms node) {
    }

    public void caseATermTerms(ATermTerms node) {
    }

    public void inAInverseofAnykeyword(AInverseofAnykeyword node) {
    }

    public void outAInverseofAnykeyword(AInverseofAnykeyword node) {
    }

    public void caseAInverseofAnykeyword(AInverseofAnykeyword node) {
    }

    public void inAOutputpinAnykeyword(AOutputpinAnykeyword node) {
    }

    public void outAOutputpinAnykeyword(AOutputpinAnykeyword node) {
    }

    public void caseAOutputpinAnykeyword(AOutputpinAnykeyword node) {
    }

    public void inALteCompOp(ALteCompOp node) {
    }

    public void outALteCompOp(ALteCompOp node) {
    }

    public void caseALteCompOp(ALteCompOp node) {
    }

    public void inAConceptMoleculePreferredMolecule(AConceptMoleculePreferredMolecule node) {
    }

    public void outAConceptMoleculePreferredMolecule(AConceptMoleculePreferredMolecule node) {
    }

    public void caseAConceptMoleculePreferredMolecule(AConceptMoleculePreferredMolecule node) {
    }

    public void inASubrelationAnykeyword(ASubrelationAnykeyword node) {
    }

    public void outASubrelationAnykeyword(ASubrelationAnykeyword node) {
    }

    public void caseASubrelationAnykeyword(ASubrelationAnykeyword node) {
    }

    public void inAAttrRelList(AAttrRelList node) {
    }

    public void outAAttrRelList(AAttrRelList node) {
    }

    public void caseAAttrRelList(AAttrRelList node) {
    }

    public void inAConcurrentAnykeyword(AConcurrentAnykeyword node) {
    }

    public void outAConcurrentAnykeyword(AConcurrentAnykeyword node) {
    }

    public void caseAConcurrentAnykeyword(AConcurrentAnykeyword node) {
    }

    public void inAPreconditionAnykeyword(APreconditionAnykeyword node) {
    }

    public void outAPreconditionAnykeyword(APreconditionAnykeyword node) {
    }

    public void caseAPreconditionAnykeyword(APreconditionAnykeyword node) {
    }

    public void inAAtomPerform(AAtomPerform node) {
    }

    public void outAAtomPerform(AAtomPerform node) {
    }

    public void caseAAtomPerform(AAtomPerform node) {
    }

    public void inAUseService(AUseService node) {
    }

    public void outAUseService(AUseService node) {
    }

    public void caseAUseService(AUseService node) {
    }

    public void inAInstance(AInstance node) {
    }

    public void outAInstance(AInstance node) {
    }

    public void caseAInstance(AInstance node) {
    }

    public void inAAddArithOp(AAddArithOp node) {
    }

    public void outAAddArithOp(AAddArithOp node) {
    }

    public void caseAAddArithOp(AAddArithOp node) {
    }

    public void inAMathFunctionsymbol(AMathFunctionsymbol node) {
    }

    public void outAMathFunctionsymbol(AMathFunctionsymbol node) {
    }

    public void caseAMathFunctionsymbol(AMathFunctionsymbol node) {
    }

    public void inAInputpinPin(AInputpinPin node) {
    }

    public void outAInputpinPin(AInputpinPin node) {
    }

    public void caseAInputpinPin(AInputpinPin node) {
    }

    public void inANbAnonymousTerm(ANbAnonymousTerm node) {
    }

    public void outANbAnonymousTerm(ANbAnonymousTerm node) {
    }

    public void caseANbAnonymousTerm(ANbAnonymousTerm node) {
    }

    public void inASequentialWorkflowPattern(ASequentialWorkflowPattern node) {
    }

    public void outASequentialWorkflowPattern(ASequentialWorkflowPattern node) {
    }

    public void caseASequentialWorkflowPattern(ASequentialWorkflowPattern node) {
    }

    public void inAAssumptionPrePostAssOrEff(AAssumptionPrePostAssOrEff node) {
    }

    public void outAAssumptionPrePostAssOrEff(AAssumptionPrePostAssOrEff node) {
    }

    public void caseAAssumptionPrePostAssOrEff(AAssumptionPrePostAssOrEff node) {
    }

    public void inAWgmediatorMediator(AWgmediatorMediator node) {
    }

    public void outAWgmediatorMediator(AWgmediatorMediator node) {
    }

    public void caseAWgmediatorMediator(AWgmediatorMediator node) {
    }

    public void inAArithVal(AArithVal node) {
    }

    public void outAArithVal(AArithVal node) {
    }

    public void caseAArithVal(AArithVal node) {
    }

    public void inAInterruptsAnykeyword(AInterruptsAnykeyword node) {
    }

    public void outAInterruptsAnykeyword(AInterruptsAnykeyword node) {
    }

    public void caseAInterruptsAnykeyword(AInterruptsAnykeyword node) {
    }

    public void inAImpliestypeAnykeyword(AImpliestypeAnykeyword node) {
    }

    public void outAImpliestypeAnykeyword(AImpliestypeAnykeyword node) {
    }

    public void caseAImpliestypeAnykeyword(AImpliestypeAnykeyword node) {
    }

    public void inAOpenWorldAttType(AOpenWorldAttType node) {
    }

    public void outAOpenWorldAttType(AOpenWorldAttType node) {
    }

    public void caseAOpenWorldAttType(AOpenWorldAttType node) {
    }

    public void inAPpmediatorAnykeyword(APpmediatorAnykeyword node) {
    }

    public void outAPpmediatorAnykeyword(APpmediatorAnykeyword node) {
    }

    public void caseAPpmediatorAnykeyword(APpmediatorAnykeyword node) {
    }

    public void inAWwmediatorMediator(AWwmediatorMediator node) {
    }

    public void outAWwmediatorMediator(AWwmediatorMediator node) {
    }

    public void caseAWwmediatorMediator(AWwmediatorMediator node) {
    }

    public void inAUseserviceAnykeyword(AUseserviceAnykeyword node) {
    }

    public void outAUseserviceAnykeyword(AUseserviceAnykeyword node) {
    }

    public void caseAUseserviceAnykeyword(AUseserviceAnykeyword node) {
    }

    public void inAForallQuantifierKey(AForallQuantifierKey node) {
    }

    public void outAForallQuantifierKey(AForallQuantifierKey node) {
    }

    public void caseAForallQuantifierKey(AForallQuantifierKey node) {
    }

    public void inAIdIdlist(AIdIdlist node) {
    }

    public void outAIdIdlist(AIdIdlist node) {
    }

    public void caseAIdIdlist(AIdIdlist node) {
    }

    public void inACashewPerformWorkflowCashewPerformAlt(ACashewPerformWorkflowCashewPerformAlt node) {
    }

    public void outACashewPerformWorkflowCashewPerformAlt(ACashewPerformWorkflowCashewPerformAlt node) {
    }

    public void caseACashewPerformWorkflowCashewPerformAlt(ACashewPerformWorkflowCashewPerformAlt node) {
    }

    public void inAQuantified(AQuantified node) {
    }

    public void outAQuantified(AQuantified node) {
    }

    public void caseAQuantified(AQuantified node) {
    }

    public void inAOntologyDefinition(AOntologyDefinition node) {
    }

    public void outAOntologyDefinition(AOntologyDefinition node) {
    }

    public void caseAOntologyDefinition(AOntologyDefinition node) {
    }

    public void inAFactUpdate(AFactUpdate node) {
    }

    public void outAFactUpdate(AFactUpdate node) {
    }

    public void caseAFactUpdate(AFactUpdate node) {
    }

    public void inARelation(ARelation node) {
    }

    public void outARelation(ARelation node) {
    }

    public void caseARelation(ARelation node) {
    }

    public void inAPfmediatorMediator(APfmediatorMediator node) {
    }

    public void outAPfmediatorMediator(APfmediatorMediator node) {
    }

    public void caseAPfmediatorMediator(APfmediatorMediator node) {
    }

    public void inAOrchForallOrchestrationRule(AOrchForallOrchestrationRule node) {
    }

    public void outAOrchForallOrchestrationRule(AOrchForallOrchestrationRule node) {
    }

    public void caseAOrchForallOrchestrationRule(AOrchForallOrchestrationRule node) {
    }

    public void inAForkNode(AForkNode node) {
    }

    public void outAForkNode(AForkNode node) {
    }

    public void caseAForkNode(AForkNode node) {
    }

    public void inANodecontents(ANodecontents node) {
    }

    public void outANodecontents(ANodecontents node) {
    }

    public void caseANodecontents(ANodecontents node) {
    }

    public void inAActivityfinalNode(AActivityfinalNode node) {
    }

    public void outAActivityfinalNode(AActivityfinalNode node) {
    }

    public void caseAActivityfinalNode(AActivityfinalNode node) {
    }

    public void inASuperrelation(ASuperrelation node) {
    }

    public void outASuperrelation(ASuperrelation node) {
    }

    public void caseASuperrelation(ASuperrelation node) {
    }

    public void inAInfiniteCardinalityCardinalityNumber(AInfiniteCardinalityCardinalityNumber node) {
    }

    public void outAInfiniteCardinalityCardinalityNumber(AInfiniteCardinalityCardinalityNumber node) {
    }

    public void caseAInfiniteCardinalityCardinalityNumber(AInfiniteCardinalityCardinalityNumber node) {
    }

    public void inAAchievegoalAnykeyword(AAchievegoalAnykeyword node) {
    }

    public void outAAchievegoalAnykeyword(AAchievegoalAnykeyword node) {
    }

    public void caseAAchievegoalAnykeyword(AAchievegoalAnykeyword node) {
    }

    public void inACashewPerformReceiveCashewPerformAlt(ACashewPerformReceiveCashewPerformAlt node) {
    }

    public void outACashewPerformReceiveCashewPerformAlt(ACashewPerformReceiveCashewPerformAlt node) {
    }

    public void caseACashewPerformReceiveCashewPerformAlt(ACashewPerformReceiveCashewPerformAlt node) {
    }

    public void inAControlledModeId(AControlledModeId node) {
    }

    public void outAControlledModeId(AControlledModeId node) {
    }

    public void caseAControlledModeId(AControlledModeId node) {
    }

    public void inAIriGroundingInfo(AIriGroundingInfo node) {
    }

    public void outAIriGroundingInfo(AIriGroundingInfo node) {
    }

    public void caseAIriGroundingInfo(AIriGroundingInfo node) {
    }

    public void inAOrchChooseOrchestrationRule(AOrchChooseOrchestrationRule node) {
    }

    public void outAOrchChooseOrchestrationRule(AOrchChooseOrchestrationRule node) {
    }

    public void caseAOrchChooseOrchestrationRule(AOrchChooseOrchestrationRule node) {
    }

    public void inAMoleculeSimple(AMoleculeSimple node) {
    }

    public void outAMoleculeSimple(AMoleculeSimple node) {
    }

    public void caseAMoleculeSimple(AMoleculeSimple node) {
    }

    public void inAAxiomOntologyElement(AAxiomOntologyElement node) {
    }

    public void outAAxiomOntologyElement(AAxiomOntologyElement node) {
    }

    public void caseAAxiomOntologyElement(AAxiomOntologyElement node) {
    }

    public void inADefaultModeModeEntry(ADefaultModeModeEntry node) {
    }

    public void outADefaultModeModeEntry(ADefaultModeModeEntry node) {
    }

    public void caseADefaultModeModeEntry(ADefaultModeModeEntry node) {
    }

    public void inANumericValue(ANumericValue node) {
    }

    public void outANumericValue(ANumericValue node) {
    }

    public void caseANumericValue(ANumericValue node) {
    }

    public void inASemisimple2AdditionArithVal(ASemisimple2AdditionArithVal node) {
    }

    public void outASemisimple2AdditionArithVal(ASemisimple2AdditionArithVal node) {
    }

    public void caseASemisimple2AdditionArithVal(ASemisimple2AdditionArithVal node) {
    }

    public void inAFactRelationFact(AFactRelationFact node) {
    }

    public void outAFactRelationFact(AFactRelationFact node) {
    }

    public void caseAFactRelationFact(AFactRelationFact node) {
    }

    public void inAArithMathOp(AArithMathOp node) {
    }

    public void outAArithMathOp(AArithMathOp node) {
    }

    public void caseAArithMathOp(AArithMathOp node) {
    }

    public void inADefinedby(ADefinedby node) {
    }

    public void outADefinedby(ADefinedby node) {
    }

    public void caseADefinedby(ADefinedby node) {
    }

    public void inAMode(AMode node) {
    }

    public void outAMode(AMode node) {
    }

    public void caseAMode(AMode node) {
    }

    public void inARelationInstanceAnykeyword(ARelationInstanceAnykeyword node) {
    }

    public void outARelationInstanceAnykeyword(ARelationInstanceAnykeyword node) {
    }

    public void caseARelationInstanceAnykeyword(ARelationInstanceAnykeyword node) {
    }

    public void inAInterrupting(AInterrupting node) {
    }

    public void outAInterrupting(AInterrupting node) {
    }

    public void caseAInterrupting(AInterrupting node) {
    }

    public void inAMsources(AMsources node) {
    }

    public void outAMsources(AMsources node) {
    }

    public void caseAMsources(AMsources node) {
    }

    public void inAImpliesAnykeyword(AImpliesAnykeyword node) {
    }

    public void outAImpliesAnykeyword(AImpliesAnykeyword node) {
    }

    public void caseAImpliesAnykeyword(AImpliesAnykeyword node) {
    }

    public void inAExtractionNode(AExtractionNode node) {
    }

    public void outAExtractionNode(AExtractionNode node) {
    }

    public void caseAExtractionNode(AExtractionNode node) {
    }

    public void inAGrounding(AGrounding node) {
    }

    public void outAGrounding(AGrounding node) {
    }

    public void caseAGrounding(AGrounding node) {
    }

    public void inAAnySqname(AAnySqname node) {
    }

    public void outAAnySqname(AAnySqname node) {
    }

    public void caseAAnySqname(AAnySqname node) {
    }

    public void inAOntologyAnykeyword(AOntologyAnykeyword node) {
    }

    public void outAOntologyAnykeyword(AOntologyAnykeyword node) {
    }

    public void caseAOntologyAnykeyword(AOntologyAnykeyword node) {
    }

    public void inAGoalDefinition(AGoalDefinition node) {
    }

    public void outAGoalDefinition(AGoalDefinition node) {
    }

    public void caseAGoalDefinition(AGoalDefinition node) {
    }

    public void inACashewworkflowAnykeyword(ACashewworkflowAnykeyword node) {
    }

    public void outACashewworkflowAnykeyword(ACashewworkflowAnykeyword node) {
    }

    public void caseACashewworkflowAnykeyword(ACashewworkflowAnykeyword node) {
    }

    public void inAGgmediatorAnykeyword(AGgmediatorAnykeyword node) {
    }

    public void outAGgmediatorAnykeyword(AGgmediatorAnykeyword node) {
    }

    public void caseAGgmediatorAnykeyword(AGgmediatorAnykeyword node) {
    }

    public void inANfpHeader(ANfpHeader node) {
    }

    public void outANfpHeader(ANfpHeader node) {
    }

    public void caseANfpHeader(ANfpHeader node) {
    }

    public void inACashewWorkflowDef(ACashewWorkflowDef node) {
    }

    public void outACashewWorkflowDef(ACashewWorkflowDef node) {
    }

    public void caseACashewWorkflowDef(ACashewWorkflowDef node) {
    }

    public void inAInstanceAnykeyword(AInstanceAnykeyword node) {
    }

    public void outAInstanceAnykeyword(AInstanceAnykeyword node) {
    }

    public void caseAInstanceAnykeyword(AInstanceAnykeyword node) {
    }

    public void inANamespace(ANamespace node) {
    }

    public void outANamespace(ANamespace node) {
    }

    public void caseANamespace(ANamespace node) {
    }

    public void inAInstanceOntologyElement(AInstanceOntologyElement node) {
    }

    public void outAInstanceOntologyElement(AInstanceOntologyElement node) {
    }

    public void caseAInstanceOntologyElement(AInstanceOntologyElement node) {
    }

    public void inAUntilAnykeyword(AUntilAnykeyword node) {
    }

    public void outAUntilAnykeyword(AUntilAnykeyword node) {
    }

    public void caseAUntilAnykeyword(AUntilAnykeyword node) {
    }

    public void inAIdlistIdlist(AIdlistIdlist node) {
    }

    public void outAIdlistIdlist(AIdlistIdlist node) {
    }

    public void caseAIdlistIdlist(AIdlistIdlist node) {
    }

    public void inAUpdatesRule(AUpdatesRule node) {
    }

    public void outAUpdatesRule(AUpdatesRule node) {
    }

    public void caseAUpdatesRule(AUpdatesRule node) {
    }

    public void inASingleSources(ASingleSources node) {
    }

    public void outASingleSources(ASingleSources node) {
    }

    public void caseASingleSources(ASingleSources node) {
    }

    public void inADataflowmediatorsAnykeyword(ADataflowmediatorsAnykeyword node) {
    }

    public void outADataflowmediatorsAnykeyword(ADataflowmediatorsAnykeyword node) {
    }

    public void caseADataflowmediatorsAnykeyword(ADataflowmediatorsAnykeyword node) {
    }

    public void inASource(ASource node) {
    }

    public void outASource(ASource node) {
    }

    public void caseASource(ASource node) {
    }

    public void inAParametrizedFunctionsymbol(AParametrizedFunctionsymbol node) {
    }

    public void outAParametrizedFunctionsymbol(AParametrizedFunctionsymbol node) {
    }

    public void caseAParametrizedFunctionsymbol(AParametrizedFunctionsymbol node) {
    }

    public void inAElseGuard(AElseGuard node) {
    }

    public void outAElseGuard(AElseGuard node) {
    }

    public void caseAElseGuard(AElseGuard node) {
    }

    public void inAAnonymousId(AAnonymousId node) {
    }

    public void outAAnonymousId(AAnonymousId node) {
    }

    public void caseAAnonymousId(AAnonymousId node) {
    }

    public void inAImportsontology(AImportsontology node) {
    }

    public void outAImportsontology(AImportsontology node) {
    }

    public void caseAImportsontology(AImportsontology node) {
    }

    public void inAOutModeId(AOutModeId node) {
    }

    public void outAOutModeId(AOutModeId node) {
    }

    public void caseAOutModeId(AOutModeId node) {
    }

    public void inAExistsQuantifierKey(AExistsQuantifierKey node) {
    }

    public void outAExistsQuantifierKey(AExistsQuantifierKey node) {
    }

    public void caseAExistsQuantifierKey(AExistsQuantifierKey node) {
    }

    public void inAFactPreferredFact(AFactPreferredFact node) {
    }

    public void outAFactPreferredFact(AFactPreferredFact node) {
    }

    public void caseAFactPreferredFact(AFactPreferredFact node) {
    }

    public void inAGuardAnykeyword(AGuardAnykeyword node) {
    }

    public void outAGuardAnykeyword(AGuardAnykeyword node) {
    }

    public void caseAGuardAnykeyword(AGuardAnykeyword node) {
    }

    public void inATermValuelist(ATermValuelist node) {
    }

    public void outATermValuelist(ATermValuelist node) {
    }

    public void caseATermValuelist(ATermValuelist node) {
    }

    public void inAWsmlvariant(AWsmlvariant node) {
    }

    public void outAWsmlvariant(AWsmlvariant node) {
    }

    public void caseAWsmlvariant(AWsmlvariant node) {
    }

    public void inARestrictedLeCondition(ARestrictedLeCondition node) {
    }

    public void outARestrictedLeCondition(ARestrictedLeCondition node) {
    }

    public void caseARestrictedLeCondition(ARestrictedLeCondition node) {
    }

    public void inASubconceptofCptOp(ASubconceptofCptOp node) {
    }

    public void outASubconceptofCptOp(ASubconceptofCptOp node) {
    }

    public void caseASubconceptofCptOp(ASubconceptofCptOp node) {
    }

    public void inAActivitygroupcontents(AActivitygroupcontents node) {
    }

    public void outAActivitygroupcontents(AActivitygroupcontents node) {
    }

    public void caseAActivitygroupcontents(AActivitygroupcontents node) {
    }

    public void inAAttrSpecification(AAttrSpecification node) {
    }

    public void outAAttrSpecification(AAttrSpecification node) {
    }

    public void caseAAttrSpecification(AAttrSpecification node) {
    }

    public void inAForkAnykeyword(AForkAnykeyword node) {
    }

    public void outAForkAnykeyword(AForkAnykeyword node) {
    }

    public void caseAForkAnykeyword(AForkAnykeyword node) {
    }

    public void inAGoalAnykeyword(AGoalAnykeyword node) {
    }

    public void outAGoalAnykeyword(AGoalAnykeyword node) {
    }

    public void caseAGoalAnykeyword(AGoalAnykeyword node) {
    }

    public void inAOftypeAttrDefOp(AOftypeAttrDefOp node) {
    }

    public void outAOftypeAttrDefOp(AOftypeAttrDefOp node) {
    }

    public void caseAOftypeAttrDefOp(AOftypeAttrDefOp node) {
    }

    public void inAAttrRelationAttrFactList(AAttrRelationAttrFactList node) {
    }

    public void outAAttrRelationAttrFactList(AAttrRelationAttrFactList node) {
    }

    public void caseAAttrRelationAttrFactList(AAttrRelationAttrFactList node) {
    }

    public void inADecimal(ADecimal node) {
    }

    public void outADecimal(ADecimal node) {
    }

    public void caseADecimal(ADecimal node) {
    }

    public void inALocalkeywordSqname(ALocalkeywordSqname node) {
    }

    public void outALocalkeywordSqname(ALocalkeywordSqname node) {
    }

    public void caseALocalkeywordSqname(ALocalkeywordSqname node) {
    }

    public void inADataflowEdge(ADataflowEdge node) {
    }

    public void outADataflowEdge(ADataflowEdge node) {
    }

    public void caseADataflowEdge(ADataflowEdge node) {
    }

    public void inAPostconditionAnykeyword(APostconditionAnykeyword node) {
    }

    public void outAPostconditionAnykeyword(APostconditionAnykeyword node) {
    }

    public void caseAPostconditionAnykeyword(APostconditionAnykeyword node) {
    }

    public void inAMergeNode(AMergeNode node) {
    }

    public void outAMergeNode(AMergeNode node) {
    }

    public void caseAMergeNode(AMergeNode node) {
    }

    public void inAHasvalueAnykeyword(AHasvalueAnykeyword node) {
    }

    public void outAHasvalueAnykeyword(AHasvalueAnykeyword node) {
    }

    public void caseAHasvalueAnykeyword(AHasvalueAnykeyword node) {
    }

    public void inAFlowstartAnykeyword(AFlowstartAnykeyword node) {
    }

    public void outAFlowstartAnykeyword(AFlowstartAnykeyword node) {
    }

    public void caseAFlowstartAnykeyword(AFlowstartAnykeyword node) {
    }

    public void inAMoreParamsTermUpdates(AMoreParamsTermUpdates node) {
    }

    public void outAMoreParamsTermUpdates(AMoreParamsTermUpdates node) {
    }

    public void caseAMoreParamsTermUpdates(AMoreParamsTermUpdates node) {
    }

    public void inASslink(ASslink node) {
    }

    public void outASslink(ASslink node) {
    }

    public void caseASslink(ASslink node) {
    }

    public void inAComparisonSimple(AComparisonSimple node) {
    }

    public void outAComparisonSimple(AComparisonSimple node) {
    }

    public void caseAComparisonSimple(AComparisonSimple node) {
    }

    public void inANewTermNewTerm(ANewTermNewTerm node) {
    }

    public void outANewTermNewTerm(ANewTermNewTerm node) {
    }

    public void caseANewTermNewTerm(ANewTermNewTerm node) {
    }

    public void inADefaultnsPrefixdefinitionlist(ADefaultnsPrefixdefinitionlist node) {
    }

    public void outADefaultnsPrefixdefinitionlist(ADefaultnsPrefixdefinitionlist node) {
    }

    public void caseADefaultnsPrefixdefinitionlist(ADefaultnsPrefixdefinitionlist node) {
    }

    public void inAImpliestypeAttrDefOp(AImpliestypeAttrDefOp node) {
    }

    public void outAImpliestypeAttrDefOp(AImpliestypeAttrDefOp node) {
    }

    public void caseAImpliestypeAttrDefOp(AImpliestypeAttrDefOp node) {
    }

    public void inAStateSignature(AStateSignature node) {
    }

    public void outAStateSignature(AStateSignature node) {
    }

    public void caseAStateSignature(AStateSignature node) {
    }

    public void inAConjunctionDisjunction(AConjunctionDisjunction node) {
    }

    public void outAConjunctionDisjunction(AConjunctionDisjunction node) {
    }

    public void caseAConjunctionDisjunction(AConjunctionDisjunction node) {
    }

    public void inACashewWorkflow(ACashewWorkflow node) {
    }

    public void outACashewWorkflow(ACashewWorkflow node) {
    }

    public void caseACashewWorkflow(ACashewWorkflow node) {
    }

    public void inAVarTerm(AVarTerm node) {
    }

    public void outAVarTerm(AVarTerm node) {
    }

    public void caseAVarTerm(AVarTerm node) {
    }

    public void inAAtomPerformSendAtomPerformAlt(AAtomPerformSendAtomPerformAlt node) {
    }

    public void outAAtomPerformSendAtomPerformAlt(AAtomPerformSendAtomPerformAlt node) {
    }

    public void caseAAtomPerformSendAtomPerformAlt(AAtomPerformSendAtomPerformAlt node) {
    }

    public void inAAtomPerformReceiveAtomPerformAlt(AAtomPerformReceiveAtomPerformAlt node) {
    }

    public void outAAtomPerformReceiveAtomPerformAlt(AAtomPerformReceiveAtomPerformAlt node) {
    }

    public void caseAAtomPerformReceiveAtomPerformAlt(AAtomPerformReceiveAtomPerformAlt node) {
    }

    public void inAMorechoices(AMorechoices node) {
    }

    public void outAMorechoices(AMorechoices node) {
    }

    public void caseAMorechoices(AMorechoices node) {
    }

    public void inAMediatorDefinition(AMediatorDefinition node) {
    }

    public void outAMediatorDefinition(AMediatorDefinition node) {
    }

    public void caseAMediatorDefinition(AMediatorDefinition node) {
    }

    public void inAEquivalentAnykeyword(AEquivalentAnykeyword node) {
    }

    public void outAEquivalentAnykeyword(AEquivalentAnykeyword node) {
    }

    public void caseAEquivalentAnykeyword(AEquivalentAnykeyword node) {
    }

    public void inAWhileAnykeyword(AWhileAnykeyword node) {
    }

    public void outAWhileAnykeyword(AWhileAnykeyword node) {
    }

    public void caseAWhileAnykeyword(AWhileAnykeyword node) {
    }

    public void inAReflexiveAnykeyword(AReflexiveAnykeyword node) {
    }

    public void outAReflexiveAnykeyword(AReflexiveAnykeyword node) {
    }

    public void caseAReflexiveAnykeyword(AReflexiveAnykeyword node) {
    }

    public void inAIriId(AIriId node) {
    }

    public void outAIriId(AIriId node) {
    }

    public void caseAIriId(AIriId node) {
    }

    public void inAIrilistGroundingInfo(AIrilistGroundingInfo node) {
    }

    public void outAIrilistGroundingInfo(AIrilistGroundingInfo node) {
    }

    public void caseAIrilistGroundingInfo(AIrilistGroundingInfo node) {
    }

    public void inAVariables(AVariables node) {
    }

    public void outAVariables(AVariables node) {
    }

    public void caseAVariables(AVariables node) {
    }

    public void inAAddModifier(AAddModifier node) {
    }

    public void outAAddModifier(AAddModifier node) {
    }

    public void caseAAddModifier(AAddModifier node) {
    }

    public void inAOrchInvokeServiceOrchPerformAlt(AOrchInvokeServiceOrchPerformAlt node) {
    }

    public void outAOrchInvokeServiceOrchPerformAlt(AOrchInvokeServiceOrchPerformAlt node) {
    }

    public void caseAOrchInvokeServiceOrchPerformAlt(AOrchInvokeServiceOrchPerformAlt node) {
    }

    public void inAWwmediator(AWwmediator node) {
    }

    public void outAWwmediator(AWwmediator node) {
    }

    public void caseAWwmediator(AWwmediator node) {
    }

    public void inAGteCompOp(AGteCompOp node) {
    }

    public void outAGteCompOp(AGteCompOp node) {
    }

    public void caseAGteCompOp(AGteCompOp node) {
    }

    public void inAAdlink(AAdlink node) {
    }

    public void outAAdlink(AAdlink node) {
    }

    public void caseAAdlink(AAdlink node) {
    }

    public void inAApplieschoreographyAnykeyword(AApplieschoreographyAnykeyword node) {
    }

    public void outAApplieschoreographyAnykeyword(AApplieschoreographyAnykeyword node) {
    }

    public void caseAApplieschoreographyAnykeyword(AApplieschoreographyAnykeyword node) {
    }

    public void inAInterfaceAnykeyword(AInterfaceAnykeyword node) {
    }

    public void outAInterfaceAnykeyword(AInterfaceAnykeyword node) {
    }

    public void caseAInterfaceAnykeyword(AInterfaceAnykeyword node) {
    }

    public void inAComparison(AComparison node) {
    }

    public void outAComparison(AComparison node) {
    }

    public void caseAComparison(AComparison node) {
    }

    public void inAAttrFact(AAttrFact node) {
    }

    public void outAAttrFact(AAttrFact node) {
    }

    public void caseAAttrFact(AAttrFact node) {
    }

    public void inAChorCashewChoreographyFormalism(AChorCashewChoreographyFormalism node) {
    }

    public void outAChorCashewChoreographyFormalism(AChorCashewChoreographyFormalism node) {
    }

    public void caseAChorCashewChoreographyFormalism(AChorCashewChoreographyFormalism node) {
    }

    public void inAMoreids(AMoreids node) {
    }

    public void outAMoreids(AMoreids node) {
    }

    public void caseAMoreids(AMoreids node) {
    }

    public void inAIriIri(AIriIri node) {
    }

    public void outAIriIri(AIriIri node) {
    }

    public void caseAIriIri(AIriIri node) {
    }

    public void inAGgmediator(AGgmediator node) {
    }

    public void outAGgmediator(AGgmediator node) {
    }

    public void caseAGgmediator(AGgmediator node) {
    }

    public void inAElseAnykeyword(AElseAnykeyword node) {
    }

    public void outAElseAnykeyword(AElseAnykeyword node) {
    }

    public void caseAElseAnykeyword(AElseAnykeyword node) {
    }

    public void inADisjunctionExpr(ADisjunctionExpr node) {
    }

    public void outADisjunctionExpr(ADisjunctionExpr node) {
    }

    public void caseADisjunctionExpr(ADisjunctionExpr node) {
    }

    public void inADatatypeValue(ADatatypeValue node) {
    }

    public void outADatatypeValue(ADatatypeValue node) {
    }

    public void caseADatatypeValue(ADatatypeValue node) {
    }

    public void inAMultiplicationMultVal(AMultiplicationMultVal node) {
    }

    public void outAMultiplicationMultVal(AMultiplicationMultVal node) {
    }

    public void caseAMultiplicationMultVal(AMultiplicationMultVal node) {
    }

    public void inAWgmediatorAnykeyword(AWgmediatorAnykeyword node) {
    }

    public void outAWgmediatorAnykeyword(AWgmediatorAnykeyword node) {
    }

    public void caseAWgmediatorAnykeyword(AWgmediatorAnykeyword node) {
    }

    public void inAOrchPerformSendOrchPerformAlt(AOrchPerformSendOrchPerformAlt node) {
    }

    public void outAOrchPerformSendOrchPerformAlt(AOrchPerformSendOrchPerformAlt node) {
    }

    public void caseAOrchPerformSendOrchPerformAlt(AOrchPerformSendOrchPerformAlt node) {
    }

    public void inANegatedSubexpr(ANegatedSubexpr node) {
    }

    public void outANegatedSubexpr(ANegatedSubexpr node) {
    }

    public void caseANegatedSubexpr(ANegatedSubexpr node) {
    }

    public void inAConceptMoleculeNonpreferredMolecule(AConceptMoleculeNonpreferredMolecule node) {
    }

    public void outAConceptMoleculeNonpreferredMolecule(AConceptMoleculeNonpreferredMolecule node) {
    }

    public void caseAConceptMoleculeNonpreferredMolecule(AConceptMoleculeNonpreferredMolecule node) {
    }

    public void inAConcept(AConcept node) {
    }

    public void outAConcept(AConcept node) {
    }

    public void caseAConcept(AConcept node) {
    }

    public void inAJoinNode(AJoinNode node) {
    }

    public void outAJoinNode(AJoinNode node) {
    }

    public void caseAJoinNode(AJoinNode node) {
    }

    public void inACapability(ACapability node) {
    }

    public void outACapability(ACapability node) {
    }

    public void caseACapability(ACapability node) {
    }

    public void inAConceptAnykeyword(AConceptAnykeyword node) {
    }

    public void outAConceptAnykeyword(AConceptAnykeyword node) {
    }

    public void caseAConceptAnykeyword(AConceptAnykeyword node) {
    }

    public void inAChorAsmChoreographyFormalism(AChorAsmChoreographyFormalism node) {
    }

    public void outAChorAsmChoreographyFormalism(AChorAsmChoreographyFormalism node) {
    }

    public void caseAChorAsmChoreographyFormalism(AChorAsmChoreographyFormalism node) {
    }

    public void inAMediatorAnykeyword(AMediatorAnykeyword node) {
    }

    public void outAMediatorAnykeyword(AMediatorAnykeyword node) {
    }

    public void caseAMediatorAnykeyword(AMediatorAnykeyword node) {
    }

    public void inAChooseRule(AChooseRule node) {
    }

    public void outAChooseRule(AChooseRule node) {
    }

    public void caseAChooseRule(AChooseRule node) {
    }

    public void inASingleInterfaces(ASingleInterfaces node) {
    }

    public void outASingleInterfaces(ASingleInterfaces node) {
    }

    public void caseASingleInterfaces(ASingleInterfaces node) {
    }

    public void inAReceiveAnykeyword(AReceiveAnykeyword node) {
    }

    public void outAReceiveAnykeyword(AReceiveAnykeyword node) {
    }

    public void caseAReceiveAnykeyword(AReceiveAnykeyword node) {
    }

    public void inADefaultPrefixdefinition(ADefaultPrefixdefinition node) {
    }

    public void outADefaultPrefixdefinition(ADefaultPrefixdefinition node) {
    }

    public void caseADefaultPrefixdefinition(ADefaultPrefixdefinition node) {
    }

    public void inACashewPerformSendCashewPerformAlt(ACashewPerformSendCashewPerformAlt node) {
    }

    public void outACashewPerformSendCashewPerformAlt(ACashewPerformSendCashewPerformAlt node) {
    }

    public void caseACashewPerformSendCashewPerformAlt(ACashewPerformSendCashewPerformAlt node) {
    }

    public void inAOrchAdOrchestrationFormalism(AOrchAdOrchestrationFormalism node) {
    }

    public void outAOrchAdOrchestrationFormalism(AOrchAdOrchestrationFormalism node) {
    }

    public void caseAOrchAdOrchestrationFormalism(AOrchAdOrchestrationFormalism node) {
    }

    public void inAAxiom(AAxiom node) {
    }

    public void outAAxiom(AAxiom node) {
    }

    public void caseAAxiom(AAxiom node) {
    }

    public void inANfp(ANfp node) {
    }

    public void outANfp(ANfp node) {
    }

    public void caseANfp(ANfp node) {
    }

    public void inAEndnfpAnykeyword(AEndnfpAnykeyword node) {
    }

    public void outAEndnfpAnykeyword(AEndnfpAnykeyword node) {
    }

    public void caseAEndnfpAnykeyword(AEndnfpAnykeyword node) {
    }

    public void inAImpliesImplyOp(AImpliesImplyOp node) {
    }

    public void outAImpliesImplyOp(AImpliesImplyOp node) {
    }

    public void caseAImpliesImplyOp(AImpliesImplyOp node) {
    }

    public void inATermTermlist(ATermTermlist node) {
    }

    public void outATermTermlist(ATermTermlist node) {
    }

    public void caseATermTermlist(ATermTermlist node) {
    }

    public void inAFactMoleculeFact(AFactMoleculeFact node) {
    }

    public void outAFactMoleculeFact(AFactMoleculeFact node) {
    }

    public void caseAFactMoleculeFact(AFactMoleculeFact node) {
    }

    public void inAGoal(AGoal node) {
    }

    public void outAGoal(AGoal node) {
    }

    public void caseAGoal(AGoal node) {
    }

    public void inAAttrDefAttrRelation(AAttrDefAttrRelation node) {
    }

    public void outAAttrDefAttrRelation(AAttrDefAttrRelation node) {
    }

    public void caseAAttrDefAttrRelation(AAttrDefAttrRelation node) {
    }

    public void inATargetAnykeyword(ATargetAnykeyword node) {
    }

    public void outATargetAnykeyword(ATargetAnykeyword node) {
    }

    public void caseATargetAnykeyword(ATargetAnykeyword node) {
    }

    public void inAInverseAttributefeature(AInverseAttributefeature node) {
    }

    public void outAInverseAttributefeature(AInverseAttributefeature node) {
    }

    public void caseAInverseAttributefeature(AInverseAttributefeature node) {
    }

    public void inAOomediatorNode(AOomediatorNode node) {
    }

    public void outAOomediatorNode(AOomediatorNode node) {
    }

    public void caseAOomediatorNode(AOomediatorNode node) {
    }

    public void inAOomediatorMediator(AOomediatorMediator node) {
    }

    public void outAOomediatorMediator(AOomediatorMediator node) {
    }

    public void caseAOomediatorMediator(AOomediatorMediator node) {
    }

    public void inAChoreographyAnykeyword(AChoreographyAnykeyword node) {
    }

    public void outAChoreographyAnykeyword(AChoreographyAnykeyword node) {
    }

    public void caseAChoreographyAnykeyword(AChoreographyAnykeyword node) {
    }

    public void inACardinality(ACardinality node) {
    }

    public void outACardinality(ACardinality node) {
    }

    public void caseACardinality(ACardinality node) {
    }

    public void inADefinedbyAnykeyword(ADefinedbyAnykeyword node) {
    }

    public void outADefinedbyAnykeyword(ADefinedbyAnykeyword node) {
    }

    public void caseADefinedbyAnykeyword(ADefinedbyAnykeyword node) {
    }

    public void inADeferreduntilWorkflowPattern(ADeferreduntilWorkflowPattern node) {
    }

    public void outADeferreduntilWorkflowPattern(ADeferreduntilWorkflowPattern node) {
    }

    public void caseADeferreduntilWorkflowPattern(ADeferreduntilWorkflowPattern node) {
    }

    public void inAMemberofAnykeyword(AMemberofAnykeyword node) {
    }

    public void outAMemberofAnykeyword(AMemberofAnykeyword node) {
    }

    public void caseAMemberofAnykeyword(AMemberofAnykeyword node) {
    }

    public void inAWhileWorkflowPattern(AWhileWorkflowPattern node) {
    }

    public void outAWhileWorkflowPattern(AWhileWorkflowPattern node) {
    }

    public void caseAWhileWorkflowPattern(AWhileWorkflowPattern node) {
    }

    public void inAEqualCompOp(AEqualCompOp node) {
    }

    public void outAEqualCompOp(AEqualCompOp node) {
    }

    public void caseAEqualCompOp(AEqualCompOp node) {
    }

    public void inAWwmediatorAnykeyword(AWwmediatorAnykeyword node) {
    }

    public void outAWwmediatorAnykeyword(AWwmediatorAnykeyword node) {
    }

    public void caseAWwmediatorAnykeyword(AWwmediatorAnykeyword node) {
    }

    public void inAControlflowAnykeyword(AControlflowAnykeyword node) {
    }

    public void outAControlflowAnykeyword(AControlflowAnykeyword node) {
    }

    public void caseAControlflowAnykeyword(AControlflowAnykeyword node) {
    }

    public void inADecisionNode(ADecisionNode node) {
    }

    public void outADecisionNode(ADecisionNode node) {
    }

    public void caseADecisionNode(ADecisionNode node) {
    }

    public void inAPrefixdefinitionlistPrefixdefinitionlist(APrefixdefinitionlistPrefixdefinitionlist node) {
    }

    public void outAPrefixdefinitionlistPrefixdefinitionlist(APrefixdefinitionlistPrefixdefinitionlist node) {
    }

    public void caseAPrefixdefinitionlistPrefixdefinitionlist(APrefixdefinitionlistPrefixdefinitionlist node) {
    }

    public void inAImpliedByLpAnykeyword(AImpliedByLpAnykeyword node) {
    }

    public void outAImpliedByLpAnykeyword(AImpliedByLpAnykeyword node) {
    }

    public void caseAImpliedByLpAnykeyword(AImpliedByLpAnykeyword node) {
    }

    public void inAConjunction(AConjunction node) {
    }

    public void outAConjunction(AConjunction node) {
    }

    public void caseAConjunction(AConjunction node) {
    }

    public void inAAccepteventactionNode(AAccepteventactionNode node) {
    }

    public void outAAccepteventactionNode(AAccepteventactionNode node) {
    }

    public void caseAAccepteventactionNode(AAccepteventactionNode node) {
    }

    public void inAFactNonpreferredFact(AFactNonpreferredFact node) {
    }

    public void outAFactNonpreferredFact(AFactNonpreferredFact node) {
    }

    public void caseAFactNonpreferredFact(AFactNonpreferredFact node) {
    }

    public void inAImpliedByAnykeyword(AImpliedByAnykeyword node) {
    }

    public void outAImpliedByAnykeyword(AImpliedByAnykeyword node) {
    }

    public void caseAImpliedByAnykeyword(AImpliedByAnykeyword node) {
    }

    public void inAAssumptionAnykeyword(AAssumptionAnykeyword node) {
    }

    public void outAAssumptionAnykeyword(AAssumptionAnykeyword node) {
    }

    public void caseAAssumptionAnykeyword(AAssumptionAnykeyword node) {
    }

    public void inADataflowAnykeyword(ADataflowAnykeyword node) {
    }

    public void outADataflowAnykeyword(ADataflowAnykeyword node) {
    }

    public void caseADataflowAnykeyword(ADataflowAnykeyword node) {
    }

    public void inANamespacedefPrefixdefinition(ANamespacedefPrefixdefinition node) {
    }

    public void outANamespacedefPrefixdefinition(ANamespacedefPrefixdefinition node) {
    }

    public void caseANamespacedefPrefixdefinition(ANamespacedefPrefixdefinition node) {
    }

    public void inAConstraintAnykeyword(AConstraintAnykeyword node) {
    }

    public void outAConstraintAnykeyword(AConstraintAnykeyword node) {
    }

    public void caseAConstraintAnykeyword(AConstraintAnykeyword node) {
    }

    public void inAReflexiveAttributefeature(AReflexiveAttributefeature node) {
    }

    public void outAReflexiveAttributefeature(AReflexiveAttributefeature node) {
    }

    public void caseAReflexiveAttributefeature(AReflexiveAttributefeature node) {
    }

    public void inAClosedWorldAttType(AClosedWorldAttType node) {
    }

    public void outAClosedWorldAttType(AClosedWorldAttType node) {
    }

    public void caseAClosedWorldAttType(AClosedWorldAttType node) {
    }

    public void inAPrefix(APrefix node) {
    }

    public void outAPrefix(APrefix node) {
    }

    public void caseAPrefix(APrefix node) {
    }

    public void inAAttributeMoleculeMolecule(AAttributeMoleculeMolecule node) {
    }

    public void outAAttributeMoleculeMolecule(AAttributeMoleculeMolecule node) {
    }

    public void caseAAttributeMoleculeMolecule(AAttributeMoleculeMolecule node) {
    }

    public void inAXorWorkflowPattern(AXorWorkflowPattern node) {
    }

    public void outAXorWorkflowPattern(AXorWorkflowPattern node) {
    }

    public void caseAXorWorkflowPattern(AXorWorkflowPattern node) {
    }

    public void inAChorAdChoreographyFormalism(AChorAdChoreographyFormalism node) {
    }

    public void outAChorAdChoreographyFormalism(AChorAdChoreographyFormalism node) {
    }

    public void caseAChorAdChoreographyFormalism(AChorAdChoreographyFormalism node) {
    }

    public void inAInputpinAnykeyword(AInputpinAnykeyword node) {
    }

    public void outAInputpinAnykeyword(AInputpinAnykeyword node) {
    }

    public void caseAInputpinAnykeyword(AInputpinAnykeyword node) {
    }

    public void inACashewPerformAchievegoalCashewPerformAlt(ACashewPerformAchievegoalCashewPerformAlt node) {
    }

    public void outACashewPerformAchievegoalCashewPerformAlt(ACashewPerformAchievegoalCashewPerformAlt node) {
    }

    public void caseACashewPerformAchievegoalCashewPerformAlt(ACashewPerformAchievegoalCashewPerformAlt node) {
    }

    public void inAPostconditionPrePostAssOrEff(APostconditionPrePostAssOrEff node) {
    }

    public void outAPostconditionPrePostAssOrEff(APostconditionPrePostAssOrEff node) {
    }

    public void caseAPostconditionPrePostAssOrEff(APostconditionPrePostAssOrEff node) {
    }

    public void inADefinedAxiomAxiomdefinition(ADefinedAxiomAxiomdefinition node) {
    }

    public void outADefinedAxiomAxiomdefinition(ADefinedAxiomAxiomdefinition node) {
    }

    public void caseADefinedAxiomAxiomdefinition(ADefinedAxiomAxiomdefinition node) {
    }

    public void inAEdgecontents(AEdgecontents node) {
    }

    public void outAEdgecontents(AEdgecontents node) {
    }

    public void caseAEdgecontents(AEdgecontents node) {
    }

    public void inAClientChoreography(AClientChoreography node) {
    }

    public void outAClientChoreography(AClientChoreography node) {
    }

    public void caseAClientChoreography(AClientChoreography node) {
    }

    public void inAPfmediatorAnykeyword(APfmediatorAnykeyword node) {
    }

    public void outAPfmediatorAnykeyword(APfmediatorAnykeyword node) {
    }

    public void caseAPfmediatorAnykeyword(APfmediatorAnykeyword node) {
    }

    public void inAUpdaterule(AUpdaterule node) {
    }

    public void outAUpdaterule(AUpdaterule node) {
    }

    public void caseAUpdaterule(AUpdaterule node) {
    }

    public void inASqnameIri(ASqnameIri node) {
    }

    public void outASqnameIri(ASqnameIri node) {
    }

    public void caseASqnameIri(ASqnameIri node) {
    }

    public void inAAttributevalue(AAttributevalue node) {
    }

    public void outAAttributevalue(AAttributevalue node) {
    }

    public void caseAAttributevalue(AAttributevalue node) {
    }

    public void inAForallAnykeyword(AForallAnykeyword node) {
    }

    public void outAForallAnykeyword(AForallAnykeyword node) {
    }

    public void caseAForallAnykeyword(AForallAnykeyword node) {
    }

    public void inAMin2choicelist(AMin2choicelist node) {
    }

    public void outAMin2choicelist(AMin2choicelist node) {
    }

    public void caseAMin2choicelist(AMin2choicelist node) {
    }

    public void inAPipedRuleOrchPipedRule(APipedRuleOrchPipedRule node) {
    }

    public void outAPipedRuleOrchPipedRule(APipedRuleOrchPipedRule node) {
    }

    public void caseAPipedRuleOrchPipedRule(APipedRuleOrchPipedRule node) {
    }

    public void inAExpressionGuard(AExpressionGuard node) {
    }

    public void outAExpressionGuard(AExpressionGuard node) {
    }

    public void caseAExpressionGuard(AExpressionGuard node) {
    }

    public void inAAggregationAnykeyword(AAggregationAnykeyword node) {
    }

    public void outAAggregationAnykeyword(AAggregationAnykeyword node) {
    }

    public void caseAAggregationAnykeyword(AAggregationAnykeyword node) {
    }

    public void inATermValue(ATermValue node) {
    }

    public void outATermValue(ATermValue node) {
    }

    public void caseATermValue(ATermValue node) {
    }

    public void inAWsmlvariantAnykeyword(AWsmlvariantAnykeyword node) {
    }

    public void outAWsmlvariantAnykeyword(AWsmlvariantAnykeyword node) {
    }

    public void caseAWsmlvariantAnykeyword(AWsmlvariantAnykeyword node) {
    }

    public void inAStaticModeId(AStaticModeId node) {
    }

    public void outAStaticModeId(AStaticModeId node) {
    }

    public void caseAStaticModeId(AStaticModeId node) {
    }

    public void inASuperconcept(ASuperconcept node) {
    }

    public void outASuperconcept(ASuperconcept node) {
    }

    public void caseASuperconcept(ASuperconcept node) {
    }

    public void inAActivityfinalAnykeyword(AActivityfinalAnykeyword node) {
    }

    public void outAActivityfinalAnykeyword(AActivityfinalAnykeyword node) {
    }

    public void caseAActivityfinalAnykeyword(AActivityfinalAnykeyword node) {
    }

    public void inAOomediator(AOomediator node) {
    }

    public void outAOomediator(AOomediator node) {
    }

    public void caseAOomediator(AOomediator node) {
    }

    public void inAMemberofCptOp(AMemberofCptOp node) {
    }

    public void outAMemberofCptOp(AMemberofCptOp node) {
    }

    public void caseAMemberofCptOp(AMemberofCptOp node) {
    }

    public void inAOrchestrationTransitions(AOrchestrationTransitions node) {
    }

    public void outAOrchestrationTransitions(AOrchestrationTransitions node) {
    }

    public void caseAOrchestrationTransitions(AOrchestrationTransitions node) {
    }

    public void inASendAnykeyword(ASendAnykeyword node) {
    }

    public void outASendAnykeyword(ASendAnykeyword node) {
    }

    public void caseASendAnykeyword(ASendAnykeyword node) {
    }

    public void inAParamtype(AParamtype node) {
    }

    public void outAParamtype(AParamtype node) {
    }

    public void caseAParamtype(AParamtype node) {
    }

    public void inAUseAxiomAxiomdefinition(AUseAxiomAxiomdefinition node) {
    }

    public void outAUseAxiomAxiomdefinition(AUseAxiomAxiomdefinition node) {
    }

    public void caseAUseAxiomAxiomdefinition(AUseAxiomAxiomdefinition node) {
    }

    public void inATerms(ATerms node) {
    }

    public void outATerms(ATerms node) {
    }

    public void caseATerms(ATerms node) {
    }

    public void inAUnivtrueAnykeyword(AUnivtrueAnykeyword node) {
    }

    public void outAUnivtrueAnykeyword(AUnivtrueAnykeyword node) {
    }

    public void caseAUnivtrueAnykeyword(AUnivtrueAnykeyword node) {
    }

    public void inACashewSubDefs(ACashewSubDefs node) {
    }

    public void outACashewSubDefs(ACashewSubDefs node) {
    }

    public void caseACashewSubDefs(ACashewSubDefs node) {
    }

    public void inASubconceptAnykeyword(ASubconceptAnykeyword node) {
    }

    public void outASubconceptAnykeyword(ASubconceptAnykeyword node) {
    }

    public void caseASubconceptAnykeyword(ASubconceptAnykeyword node) {
    }

    public void inAOperationNode(AOperationNode node) {
    }

    public void outAOperationNode(AOperationNode node) {
    }

    public void caseAOperationNode(AOperationNode node) {
    }

    public void inATarget(ATarget node) {
    }

    public void outATarget(ATarget node) {
    }

    public void caseATarget(ATarget node) {
    }

    public void inAInterleavedWorkflowPattern(AInterleavedWorkflowPattern node) {
    }

    public void outAInterleavedWorkflowPattern(AInterleavedWorkflowPattern node) {
    }

    public void caseAInterleavedWorkflowPattern(AInterleavedWorkflowPattern node) {
    }

    public void inAInteger(AInteger node) {
    }

    public void outAInteger(AInteger node) {
    }

    public void caseAInteger(AInteger node) {
    }

    public void inAOrchestration(AOrchestration node) {
    }

    public void outAOrchestration(AOrchestration node) {
    }

    public void caseAOrchestration(AOrchestration node) {
    }

    public void inAOrAnykeyword(AOrAnykeyword node) {
    }

    public void outAOrAnykeyword(AOrAnykeyword node) {
    }

    public void caseAOrAnykeyword(AOrAnykeyword node) {
    }

    public void inAPreconditionPrePostAssOrEff(APreconditionPrePostAssOrEff node) {
    }

    public void outAPreconditionPrePostAssOrEff(APreconditionPrePostAssOrEff node) {
    }

    public void caseAPreconditionPrePostAssOrEff(APreconditionPrePostAssOrEff node) {
    }

    public void inALogDefinition(ALogDefinition node) {
    }

    public void outALogDefinition(ALogDefinition node) {
    }

    public void caseALogDefinition(ALogDefinition node) {
    }

    public void inASingleTermUpdate(ASingleTermUpdate node) {
    }

    public void outASingleTermUpdate(ASingleTermUpdate node) {
    }

    public void caseASingleTermUpdate(ASingleTermUpdate node) {
    }

    public void inASubArithOp(ASubArithOp node) {
    }

    public void outASubArithOp(ASubArithOp node) {
    }

    public void caseASubArithOp(ASubArithOp node) {
    }

    public void inAOomediatorAnykeyword(AOomediatorAnykeyword node) {
    }

    public void outAOomediatorAnykeyword(AOomediatorAnykeyword node) {
    }

    public void caseAOomediatorAnykeyword(AOomediatorAnykeyword node) {
    }

    public void inAActivitygroupAnykeyword(AActivitygroupAnykeyword node) {
    }

    public void outAActivitygroupAnykeyword(AActivitygroupAnykeyword node) {
    }

    public void caseAActivitygroupAnykeyword(AActivitygroupAnykeyword node) {
    }

    public void inAEnables(AEnables node) {
    }

    public void outAEnables(AEnables node) {
    }

    public void caseAEnables(AEnables node) {
    }

    public void inAMergeAnykeyword(AMergeAnykeyword node) {
    }

    public void outAMergeAnykeyword(AMergeAnykeyword node) {
    }

    public void caseAMergeAnykeyword(AMergeAnykeyword node) {
    }

    public void inADeleteModifier(ADeleteModifier node) {
    }

    public void outADeleteModifier(ADeleteModifier node) {
    }

    public void caseADeleteModifier(ADeleteModifier node) {
    }

    public void inAAndAnykeyword(AAndAnykeyword node) {
    }

    public void outAAndAnykeyword(AAndAnykeyword node) {
    }

    public void caseAAndAnykeyword(AAndAnykeyword node) {
    }

    public void inAInterruptibleregionGroup(AInterruptibleregionGroup node) {
    }

    public void outAInterruptibleregionGroup(AInterruptibleregionGroup node) {
    }

    public void caseAInterruptibleregionGroup(AInterruptibleregionGroup node) {
    }

    public void inAOrchIfOrchestrationRule(AOrchIfOrchestrationRule node) {
    }

    public void outAOrchIfOrchestrationRule(AOrchIfOrchestrationRule node) {
    }

    public void caseAOrchIfOrchestrationRule(AOrchIfOrchestrationRule node) {
    }

    public void inAImplicationExpr(AImplicationExpr node) {
    }

    public void outAImplicationExpr(AImplicationExpr node) {
    }

    public void caseAImplicationExpr(AImplicationExpr node) {
    }

    public void inAQuantifiedSubexpr(AQuantifiedSubexpr node) {
    }

    public void outAQuantifiedSubexpr(AQuantifiedSubexpr node) {
    }

    public void caseAQuantifiedSubexpr(AQuantifiedSubexpr node) {
    }

    public void inAIrilistIrilist(AIrilistIrilist node) {
    }

    public void outAIrilistIrilist(AIrilistIrilist node) {
    }

    public void caseAIrilistIrilist(AIrilistIrilist node) {
    }

    public void inAVariableListVariablelist(AVariableListVariablelist node) {
    }

    public void outAVariableListVariablelist(AVariableListVariablelist node) {
    }

    public void caseAVariableListVariablelist(AVariableListVariablelist node) {
    }

    public void inAOrchCashewOrchestrationFormalism(AOrchCashewOrchestrationFormalism node) {
    }

    public void outAOrchCashewOrchestrationFormalism(AOrchCashewOrchestrationFormalism node) {
    }

    public void caseAOrchCashewOrchestrationFormalism(AOrchCashewOrchestrationFormalism node) {
    }

    public void inAJoinAnykeyword(AJoinAnykeyword node) {
    }

    public void outAJoinAnykeyword(AJoinAnykeyword node) {
    }

    public void caseAJoinAnykeyword(AJoinAnykeyword node) {
    }

    public void inAMultMathOp(AMultMathOp node) {
    }

    public void outAMultMathOp(AMultMathOp node) {
    }

    public void caseAMultMathOp(AMultMathOp node) {
    }

    public void inAGeneralactionNode(AGeneralactionNode node) {
    }

    public void outAGeneralactionNode(AGeneralactionNode node) {
    }

    public void caseAGeneralactionNode(AGeneralactionNode node) {
    }

    public void inAAtomSimple(AAtomSimple node) {
    }

    public void outAAtomSimple(AAtomSimple node) {
    }

    public void caseAAtomSimple(AAtomSimple node) {
    }

    public void inATransitiveAttributefeature(ATransitiveAttributefeature node) {
    }

    public void outATransitiveAttributefeature(ATransitiveAttributefeature node) {
    }

    public void caseATransitiveAttributefeature(ATransitiveAttributefeature node) {
    }

    public void inAWgmediator(AWgmediator node) {
    }

    public void outAWgmediator(AWgmediator node) {
    }

    public void caseAWgmediator(AWgmediator node) {
    }

    public void inAInModeId(AInModeId node) {
    }

    public void outAInModeId(AInModeId node) {
    }

    public void caseAInModeId(AInModeId node) {
    }

    public void inASharedvardef(ASharedvardef node) {
    }

    public void outASharedvardef(ASharedvardef node) {
    }

    public void caseASharedvardef(ASharedvardef node) {
    }

    public void inAOntology(AOntology node) {
    }

    public void outAOntology(AOntology node) {
    }

    public void caseAOntology(AOntology node) {
    }

    public void inANotAnykeyword(ANotAnykeyword node) {
    }

    public void outANotAnykeyword(ANotAnykeyword node) {
    }

    public void caseANotAnykeyword(ANotAnykeyword node) {
    }

    public void inAApplymediationAnykeyword(AApplymediationAnykeyword node) {
    }

    public void outAApplymediationAnykeyword(AApplymediationAnykeyword node) {
    }

    public void caseAApplymediationAnykeyword(AApplymediationAnykeyword node) {
    }

    public void inAPartnerlink(APartnerlink node) {
    }

    public void outAPartnerlink(APartnerlink node) {
    }

    public void caseAPartnerlink(APartnerlink node) {
    }

    public void inAConceptModeModeEntry(AConceptModeModeEntry node) {
    }

    public void outAConceptModeModeEntry(AConceptModeModeEntry node) {
    }

    public void caseAConceptModeModeEntry(AConceptModeModeEntry node) {
    }

    public void inAMoreprefixdefinitions(AMoreprefixdefinitions node) {
    }

    public void outAMoreprefixdefinitions(AMoreprefixdefinitions node) {
    }

    public void caseAMoreprefixdefinitions(AMoreprefixdefinitions node) {
    }

    public void inAComplexSubexpr(AComplexSubexpr node) {
    }

    public void outAComplexSubexpr(AComplexSubexpr node) {
    }

    public void caseAComplexSubexpr(AComplexSubexpr node) {
    }

    public void inAFlowfinalAnykeyword(AFlowfinalAnykeyword node) {
    }

    public void outAFlowfinalAnykeyword(AFlowfinalAnykeyword node) {
    }

    public void caseAFlowfinalAnykeyword(AFlowfinalAnykeyword node) {
    }

    public void inAEffectAnykeyword(AEffectAnykeyword node) {
    }

    public void outAEffectAnykeyword(AEffectAnykeyword node) {
    }

    public void caseAEffectAnykeyword(AEffectAnykeyword node) {
    }

    public void inAOrchestrationAnykeyword(AOrchestrationAnykeyword node) {
    }

    public void outAOrchestrationAnykeyword(AOrchestrationAnykeyword node) {
    }

    public void caseAOrchestrationAnykeyword(AOrchestrationAnykeyword node) {
    }
}
