/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.wsmo.wsml.compiler.analysis;

import org.wsmo.wsml.compiler.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object in);
    Object getOut(Node node);
    void setOut(Node node, Object out);

    void caseStart(Start node);
    void caseAWsml(AWsml node);
    void caseAWsmlvariant(AWsmlvariant node);
    void caseANamespace(ANamespace node);
    void caseADefaultnsPrefixdefinitionlist(ADefaultnsPrefixdefinitionlist node);
    void caseAPrefixdefinitionlistPrefixdefinitionlist(APrefixdefinitionlistPrefixdefinitionlist node);
    void caseANamespacedefPrefixdefinition(ANamespacedefPrefixdefinition node);
    void caseADefaultPrefixdefinition(ADefaultPrefixdefinition node);
    void caseAMoreprefixdefinitions(AMoreprefixdefinitions node);
    void caseAGoalDefinition(AGoalDefinition node);
    void caseAOntologyDefinition(AOntologyDefinition node);
    void caseAWebserviceDefinition(AWebserviceDefinition node);
    void caseAMediatorDefinition(AMediatorDefinition node);
    void caseANfpHeader(ANfpHeader node);
    void caseAUsesmediatorHeader(AUsesmediatorHeader node);
    void caseAImportsontologyHeader(AImportsontologyHeader node);
    void caseAUsesmediator(AUsesmediator node);
    void caseAImportsontology(AImportsontology node);
    void caseANfp(ANfp node);
    void caseAOomediatorMediator(AOomediatorMediator node);
    void caseAGgmediatorMediator(AGgmediatorMediator node);
    void caseAWgmediatorMediator(AWgmediatorMediator node);
    void caseAWwmediatorMediator(AWwmediatorMediator node);
    void caseAPpmediatorMediator(APpmediatorMediator node);
    void caseAPfmediatorMediator(APfmediatorMediator node);
    void caseAOomediator(AOomediator node);
    void caseAGgmediator(AGgmediator node);
    void caseAWgmediator(AWgmediator node);
    void caseAWwmediator(AWwmediator node);
    void caseAPpmediator(APpmediator node);
    void caseAPfmediator(APfmediator node);
    void caseAUseService(AUseService node);
    void caseASource(ASource node);
    void caseAMsources(AMsources node);
    void caseASingleSources(ASingleSources node);
    void caseAMultipleSources(AMultipleSources node);
    void caseATarget(ATarget node);
    void caseAClientChoreography(AClientChoreography node);
    void caseAGoal(AGoal node);
    void caseAWebservice(AWebservice node);
    void caseACapability(ACapability node);
    void caseASharedvardef(ASharedvardef node);
    void caseAPreconditionPrePostAssOrEff(APreconditionPrePostAssOrEff node);
    void caseAPostconditionPrePostAssOrEff(APostconditionPrePostAssOrEff node);
    void caseAAssumptionPrePostAssOrEff(AAssumptionPrePostAssOrEff node);
    void caseAEffectPrePostAssOrEff(AEffectPrePostAssOrEff node);
    void caseASingleInterfaces(ASingleInterfaces node);
    void caseAMultipleInterfaces(AMultipleInterfaces node);
    void caseAMinterfaces(AMinterfaces node);
    void caseAInterface(AInterface node);
    void caseAChoreography(AChoreography node);
    void caseAOrchestration(AOrchestration node);
    void caseAChorAsmChoreographyFormalism(AChorAsmChoreographyFormalism node);
    void caseAChorAdChoreographyFormalism(AChorAdChoreographyFormalism node);
    void caseAChorCashewChoreographyFormalism(AChorCashewChoreographyFormalism node);
    void caseAOrchAsmOrchestrationFormalism(AOrchAsmOrchestrationFormalism node);
    void caseAOrchAdOrchestrationFormalism(AOrchAdOrchestrationFormalism node);
    void caseAOrchCashewOrchestrationFormalism(AOrchCashewOrchestrationFormalism node);
    void caseAStateSignature(AStateSignature node);
    void caseATransitions(ATransitions node);
    void caseAMode(AMode node);
    void caseAModeEntryModeEntryList(AModeEntryModeEntryList node);
    void caseAModeEntryListModeEntryList(AModeEntryListModeEntryList node);
    void caseAStaticModeId(AStaticModeId node);
    void caseAInModeId(AInModeId node);
    void caseAOutModeId(AOutModeId node);
    void caseASharedModeId(ASharedModeId node);
    void caseAControlledModeId(AControlledModeId node);
    void caseADefaultModeModeEntry(ADefaultModeModeEntry node);
    void caseAConceptModeModeEntry(AConceptModeModeEntry node);
    void caseARelationModeModeEntry(ARelationModeModeEntry node);
    void caseAGrounding(AGrounding node);
    void caseAIriGroundingInfo(AIriGroundingInfo node);
    void caseAIrilistGroundingInfo(AIrilistGroundingInfo node);
    void caseAIriIrilist(AIriIrilist node);
    void caseAIrilistIrilist(AIrilistIrilist node);
    void caseAIfRule(AIfRule node);
    void caseAForallRule(AForallRule node);
    void caseAChooseRule(AChooseRule node);
    void caseAUpdatesRule(AUpdatesRule node);
    void caseAPipedRulePipedRule(APipedRulePipedRule node);
    void caseAUpdaterule(AUpdaterule node);
    void caseAAddModifier(AAddModifier node);
    void caseADeleteModifier(ADeleteModifier node);
    void caseAUpdateModifier(AUpdateModifier node);
    void caseAFactPreferredFact(AFactPreferredFact node);
    void caseAFactNonpreferredFact(AFactNonpreferredFact node);
    void caseAFactMoleculeFact(AFactMoleculeFact node);
    void caseAFactRelationFact(AFactRelationFact node);
    void caseAFactUpdate(AFactUpdate node);
    void caseAAttrFact(AAttrFact node);
    void caseAAttrRelationAttrFactList(AAttrRelationAttrFactList node);
    void caseAAttrFactList(AAttrFactList node);
    void caseAOneParamTermUpdates(AOneParamTermUpdates node);
    void caseAMoreParamsTermUpdates(AMoreParamsTermUpdates node);
    void caseASingleTermUpdate(ASingleTermUpdate node);
    void caseAMoveTermUpdate(AMoveTermUpdate node);
    void caseANewTermNewTerm(ANewTermNewTerm node);
    void caseARestrictedLeCondition(ARestrictedLeCondition node);
    void caseAOrchestrationTransitions(AOrchestrationTransitions node);
    void caseAOrchIfOrchestrationRule(AOrchIfOrchestrationRule node);
    void caseAOrchForallOrchestrationRule(AOrchForallOrchestrationRule node);
    void caseAOrchChooseOrchestrationRule(AOrchChooseOrchestrationRule node);
    void caseAOrchUpdatesOrchestrationRule(AOrchUpdatesOrchestrationRule node);
    void caseAOrchPerformOrchestrationRule(AOrchPerformOrchestrationRule node);
    void caseAOrchPerformAchievegoalOrchPerformAlt(AOrchPerformAchievegoalOrchPerformAlt node);
    void caseAOrchInvokeServiceOrchPerformAlt(AOrchInvokeServiceOrchPerformAlt node);
    void caseAOrchApplyMediationOrchPerformAlt(AOrchApplyMediationOrchPerformAlt node);
    void caseAOrchPerformReceiveOrchPerformAlt(AOrchPerformReceiveOrchPerformAlt node);
    void caseAOrchPerformSendOrchPerformAlt(AOrchPerformSendOrchPerformAlt node);
    void caseAPipedRuleOrchPipedRule(APipedRuleOrchPipedRule node);
    void caseAOntology(AOntology node);
    void caseAConceptOntologyElement(AConceptOntologyElement node);
    void caseAInstanceOntologyElement(AInstanceOntologyElement node);
    void caseARelationOntologyElement(ARelationOntologyElement node);
    void caseARelationinstanceOntologyElement(ARelationinstanceOntologyElement node);
    void caseAAxiomOntologyElement(AAxiomOntologyElement node);
    void caseAConcept(AConcept node);
    void caseASuperconcept(ASuperconcept node);
    void caseAOpenWorldAttType(AOpenWorldAttType node);
    void caseAClosedWorldAttType(AClosedWorldAttType node);
    void caseAAttribute(AAttribute node);
    void caseACardinality(ACardinality node);
    void caseAFiniteCardinalityCardinalityNumber(AFiniteCardinalityCardinalityNumber node);
    void caseAInfiniteCardinalityCardinalityNumber(AInfiniteCardinalityCardinalityNumber node);
    void caseATransitiveAttributefeature(ATransitiveAttributefeature node);
    void caseASymmetricAttributefeature(ASymmetricAttributefeature node);
    void caseAInverseAttributefeature(AInverseAttributefeature node);
    void caseAReflexiveAttributefeature(AReflexiveAttributefeature node);
    void caseAInstance(AInstance node);
    void caseAMemberof(AMemberof node);
    void caseAAttributevalue(AAttributevalue node);
    void caseARelation(ARelation node);
    void caseAParamtyping(AParamtyping node);
    void caseAParamtype(AParamtype node);
    void caseAMoreparamtype(AMoreparamtype node);
    void caseASuperrelation(ASuperrelation node);
    void caseAArity(AArity node);
    void caseARelationinstance(ARelationinstance node);
    void caseAAxiom(AAxiom node);
    void caseAUseAxiomAxiomdefinition(AUseAxiomAxiomdefinition node);
    void caseANfpAxiomAxiomdefinition(ANfpAxiomAxiomdefinition node);
    void caseADefinedAxiomAxiomdefinition(ADefinedAxiomAxiomdefinition node);
    void caseALogDefinition(ALogDefinition node);
    void caseALpRuleLogExpr(ALpRuleLogExpr node);
    void caseAConstraintLogExpr(AConstraintLogExpr node);
    void caseAOtherExpressionLogExpr(AOtherExpressionLogExpr node);
    void caseAImplicationExpr(AImplicationExpr node);
    void caseADisjunctionExpr(ADisjunctionExpr node);
    void caseAConjunctionDisjunction(AConjunctionDisjunction node);
    void caseADisjunction(ADisjunction node);
    void caseASubexprConjunction(ASubexprConjunction node);
    void caseAConjunction(AConjunction node);
    void caseANegatedSubexpr(ANegatedSubexpr node);
    void caseASimpleSubexpr(ASimpleSubexpr node);
    void caseAComplexSubexpr(AComplexSubexpr node);
    void caseAQuantifiedSubexpr(AQuantifiedSubexpr node);
    void caseAQuantified(AQuantified node);
    void caseAMoleculeSimple(AMoleculeSimple node);
    void caseAComparisonSimple(AComparisonSimple node);
    void caseAAtomSimple(AAtomSimple node);
    void caseAConceptMoleculePreferredMolecule(AConceptMoleculePreferredMolecule node);
    void caseAConceptMoleculeNonpreferredMolecule(AConceptMoleculeNonpreferredMolecule node);
    void caseAAttributeMoleculeMolecule(AAttributeMoleculeMolecule node);
    void caseAAttrSpecification(AAttrSpecification node);
    void caseAAttrRelationAttrRelList(AAttrRelationAttrRelList node);
    void caseAAttrRelList(AAttrRelList node);
    void caseAAttrDefAttrRelation(AAttrDefAttrRelation node);
    void caseAAttrValAttrRelation(AAttrValAttrRelation node);
    void caseAComparison(AComparison node);
    void caseAParametrizedFunctionsymbol(AParametrizedFunctionsymbol node);
    void caseAMathFunctionsymbol(AMathFunctionsymbol node);
    void caseAArithVal(AArithVal node);
    void caseAAdditionArithVal(AAdditionArithVal node);
    void caseASemisimple1AdditionArithVal(ASemisimple1AdditionArithVal node);
    void caseASemisimple2AdditionArithVal(ASemisimple2AdditionArithVal node);
    void caseASimpleAdditionArithVal(ASimpleAdditionArithVal node);
    void caseAMultVal(AMultVal node);
    void caseAMultiplicationMultVal(AMultiplicationMultVal node);
    void caseAArithMathOp(AArithMathOp node);
    void caseAMultMathOp(AMultMathOp node);
    void caseAAddArithOp(AAddArithOp node);
    void caseASubArithOp(ASubArithOp node);
    void caseAMulMulOp(AMulMulOp node);
    void caseADivMulOp(ADivMulOp node);
    void caseAGtCompOp(AGtCompOp node);
    void caseALtCompOp(ALtCompOp node);
    void caseAGteCompOp(AGteCompOp node);
    void caseALteCompOp(ALteCompOp node);
    void caseAEqualCompOp(AEqualCompOp node);
    void caseAStrongEqualCompOp(AStrongEqualCompOp node);
    void caseAUnequalCompOp(AUnequalCompOp node);
    void caseAMemberofCptOp(AMemberofCptOp node);
    void caseASubconceptofCptOp(ASubconceptofCptOp node);
    void caseAForallQuantifierKey(AForallQuantifierKey node);
    void caseAExistsQuantifierKey(AExistsQuantifierKey node);
    void caseAOftypeAttrDefOp(AOftypeAttrDefOp node);
    void caseAImpliestypeAttrDefOp(AImpliestypeAttrDefOp node);
    void caseAImpliesImplyOp(AImpliesImplyOp node);
    void caseAImpliedbyImplyOp(AImpliedbyImplyOp node);
    void caseAEquivalentImplyOp(AEquivalentImplyOp node);
    void caseAPrefix(APrefix node);
    void caseAAnySqname(AAnySqname node);
    void caseALocalkeywordSqname(ALocalkeywordSqname node);
    void caseAAndAnykeyword(AAndAnykeyword node);
    void caseAOrAnykeyword(AOrAnykeyword node);
    void caseAImpliesAnykeyword(AImpliesAnykeyword node);
    void caseAImpliedByAnykeyword(AImpliedByAnykeyword node);
    void caseAEquivalentAnykeyword(AEquivalentAnykeyword node);
    void caseAImpliedByLpAnykeyword(AImpliedByLpAnykeyword node);
    void caseAConstraintAnykeyword(AConstraintAnykeyword node);
    void caseANotAnykeyword(ANotAnykeyword node);
    void caseAExistsAnykeyword(AExistsAnykeyword node);
    void caseAForallAnykeyword(AForallAnykeyword node);
    void caseAUnivfalseAnykeyword(AUnivfalseAnykeyword node);
    void caseAUnivtrueAnykeyword(AUnivtrueAnykeyword node);
    void caseAAssumptionAnykeyword(AAssumptionAnykeyword node);
    void caseAAxiomAnykeyword(AAxiomAnykeyword node);
    void caseACapabilityAnykeyword(ACapabilityAnykeyword node);
    void caseAChoreographyAnykeyword(AChoreographyAnykeyword node);
    void caseAConceptAnykeyword(AConceptAnykeyword node);
    void caseADefinedbyAnykeyword(ADefinedbyAnykeyword node);
    void caseAEffectAnykeyword(AEffectAnykeyword node);
    void caseAEndnfpAnykeyword(AEndnfpAnykeyword node);
    void caseAGgmediatorAnykeyword(AGgmediatorAnykeyword node);
    void caseAGoalAnykeyword(AGoalAnykeyword node);
    void caseAHasvalueAnykeyword(AHasvalueAnykeyword node);
    void caseAImpliestypeAnykeyword(AImpliestypeAnykeyword node);
    void caseAImportontologyAnykeyword(AImportontologyAnykeyword node);
    void caseAInstanceAnykeyword(AInstanceAnykeyword node);
    void caseAInterfaceAnykeyword(AInterfaceAnykeyword node);
    void caseAInverseofAnykeyword(AInverseofAnykeyword node);
    void caseAMemberofAnykeyword(AMemberofAnykeyword node);
    void caseANamespaceAnykeyword(ANamespaceAnykeyword node);
    void caseANfpAnykeyword(ANfpAnykeyword node);
    void caseAOftypeAnykeyword(AOftypeAnykeyword node);
    void caseAOntologyAnykeyword(AOntologyAnykeyword node);
    void caseAOomediatorAnykeyword(AOomediatorAnykeyword node);
    void caseAOrchestrationAnykeyword(AOrchestrationAnykeyword node);
    void caseAPostconditionAnykeyword(APostconditionAnykeyword node);
    void caseAPreconditionAnykeyword(APreconditionAnykeyword node);
    void caseAReflexiveAnykeyword(AReflexiveAnykeyword node);
    void caseARelationAnykeyword(ARelationAnykeyword node);
    void caseARelationInstanceAnykeyword(ARelationInstanceAnykeyword node);
    void caseASharedvariableAnykeyword(ASharedvariableAnykeyword node);
    void caseASourceAnykeyword(ASourceAnykeyword node);
    void caseASubconceptAnykeyword(ASubconceptAnykeyword node);
    void caseASubrelationAnykeyword(ASubrelationAnykeyword node);
    void caseASymmetricAnykeyword(ASymmetricAnykeyword node);
    void caseATargetAnykeyword(ATargetAnykeyword node);
    void caseATransitiveAnykeyword(ATransitiveAnykeyword node);
    void caseAUsemediatorAnykeyword(AUsemediatorAnykeyword node);
    void caseAUseserviceAnykeyword(AUseserviceAnykeyword node);
    void caseAWebserviceAnykeyword(AWebserviceAnykeyword node);
    void caseAWgmediatorAnykeyword(AWgmediatorAnykeyword node);
    void caseAWsmlvariantAnykeyword(AWsmlvariantAnykeyword node);
    void caseAWwmediatorAnykeyword(AWwmediatorAnykeyword node);
    void caseAApplieschoreographyAnykeyword(AApplieschoreographyAnykeyword node);
    void caseAPerformAnykeyword(APerformAnykeyword node);
    void caseAAchievegoalAnykeyword(AAchievegoalAnykeyword node);
    void caseAInvokeserviceAnykeyword(AInvokeserviceAnykeyword node);
    void caseAApplymediationAnykeyword(AApplymediationAnykeyword node);
    void caseASendAnykeyword(ASendAnykeyword node);
    void caseAReceiveAnykeyword(AReceiveAnykeyword node);
    void caseAPpmediatorAnykeyword(APpmediatorAnykeyword node);
    void caseAPfmediatorAnykeyword(APfmediatorAnykeyword node);
    void caseAActivitygroupAnykeyword(AActivitygroupAnykeyword node);
    void caseAMediatorAnykeyword(AMediatorAnykeyword node);
    void caseAFlowstartAnykeyword(AFlowstartAnykeyword node);
    void caseAFlowfinalAnykeyword(AFlowfinalAnykeyword node);
    void caseAActivityfinalAnykeyword(AActivityfinalAnykeyword node);
    void caseAAggregationAnykeyword(AAggregationAnykeyword node);
    void caseAForkAnykeyword(AForkAnykeyword node);
    void caseAJoinAnykeyword(AJoinAnykeyword node);
    void caseADecisionAnykeyword(ADecisionAnykeyword node);
    void caseAMergeAnykeyword(AMergeAnykeyword node);
    void caseASendeventactionAnykeyword(ASendeventactionAnykeyword node);
    void caseAInputpinAnykeyword(AInputpinAnykeyword node);
    void caseAOutputpinAnykeyword(AOutputpinAnykeyword node);
    void caseAControlflowAnykeyword(AControlflowAnykeyword node);
    void caseADataflowAnykeyword(ADataflowAnykeyword node);
    void caseAGuardAnykeyword(AGuardAnykeyword node);
    void caseAElseAnykeyword(AElseAnykeyword node);
    void caseAStartnodeAnykeyword(AStartnodeAnykeyword node);
    void caseAInterruptsAnykeyword(AInterruptsAnykeyword node);
    void caseACashewworkflowAnykeyword(ACashewworkflowAnykeyword node);
    void caseASequentialAnykeyword(ASequentialAnykeyword node);
    void caseAConcurrentAnykeyword(AConcurrentAnykeyword node);
    void caseAInterleavedAnykeyword(AInterleavedAnykeyword node);
    void caseADeferredchoiceAnykeyword(ADeferredchoiceAnykeyword node);
    void caseADeferredwhileAnykeyword(ADeferredwhileAnykeyword node);
    void caseADeferreduntilAnykeyword(ADeferreduntilAnykeyword node);
    void caseADataflowmediatorsAnykeyword(ADataflowmediatorsAnykeyword node);
    void caseAWhileAnykeyword(AWhileAnykeyword node);
    void caseAUntilAnykeyword(AUntilAnykeyword node);
    void caseAUnlessAnykeyword(AUnlessAnykeyword node);
    void caseARepeatAnykeyword(ARepeatAnykeyword node);
    void caseAIriIri(AIriIri node);
    void caseASqnameIri(ASqnameIri node);
    void caseAIriId(AIriId node);
    void caseAAnonymousId(AAnonymousId node);
    void caseAUniversalTruthId(AUniversalTruthId node);
    void caseAUniversalFalsehoodId(AUniversalFalsehoodId node);
    void caseAIdIdlist(AIdIdlist node);
    void caseAIdlistIdlist(AIdlistIdlist node);
    void caseAMoreids(AMoreids node);
    void caseADatatypeValue(ADatatypeValue node);
    void caseATermValue(ATermValue node);
    void caseANumericValue(ANumericValue node);
    void caseAStringValue(AStringValue node);
    void caseATermValuelist(ATermValuelist node);
    void caseAValuelistValuelist(AValuelistValuelist node);
    void caseAMorevalues(AMorevalues node);
    void caseADataTerm(ADataTerm node);
    void caseAVarTerm(AVarTerm node);
    void caseANbAnonymousTerm(ANbAnonymousTerm node);
    void caseATermTerms(ATermTerms node);
    void caseATerms(ATerms node);
    void caseATermTermlist(ATermTermlist node);
    void caseATermlist(ATermlist node);
    void caseAVariableVariables(AVariableVariables node);
    void caseAVariables(AVariables node);
    void caseAVariableVariablelist(AVariableVariablelist node);
    void caseAVariableListVariablelist(AVariableListVariablelist node);
    void caseAInteger(AInteger node);
    void caseADecimal(ADecimal node);
    void caseAIntegerNumber(AIntegerNumber node);
    void caseADecimalNumber(ADecimalNumber node);
    void caseAActivityDiagram(AActivityDiagram node);
    void caseAActivitygroupGroup(AActivitygroupGroup node);
    void caseAInterruptibleregionGroup(AInterruptibleregionGroup node);
    void caseAActivitygroupcontents(AActivitygroupcontents node);
    void caseAGeneralactionNode(AGeneralactionNode node);
    void caseAOomediatorNode(AOomediatorNode node);
    void caseAFlowstartNode(AFlowstartNode node);
    void caseAFlowfinalNode(AFlowfinalNode node);
    void caseAActivityfinalNode(AActivityfinalNode node);
    void caseAAggregationNode(AAggregationNode node);
    void caseAExtractionNode(AExtractionNode node);
    void caseAOperationNode(AOperationNode node);
    void caseAForkNode(AForkNode node);
    void caseAJoinNode(AJoinNode node);
    void caseADecisionNode(ADecisionNode node);
    void caseAMergeNode(AMergeNode node);
    void caseASendeventactionNode(ASendeventactionNode node);
    void caseAAccepteventactionNode(AAccepteventactionNode node);
    void caseAObjectnodeNode(AObjectnodeNode node);
    void caseADefinedby(ADefinedby node);
    void caseAStartnode(AStartnode node);
    void caseASslink(ASslink node);
    void caseAAdlink(AAdlink node);
    void caseACarriesconcept(ACarriesconcept node);
    void caseAPartnerlink(APartnerlink node);
    void caseANodecontents(ANodecontents node);
    void caseAInputpinPin(AInputpinPin node);
    void caseAOutputpinPin(AOutputpinPin node);
    void caseAControlflowEdge(AControlflowEdge node);
    void caseADataflowEdge(ADataflowEdge node);
    void caseAEdgecontents(AEdgecontents node);
    void caseAInterrupting(AInterrupting node);
    void caseAElseGuard(AElseGuard node);
    void caseAExpressionGuard(AExpressionGuard node);
    void caseACashewWorkflow(ACashewWorkflow node);
    void caseACashewSubDefs(ACashewSubDefs node);
    void caseACashewPerform(ACashewPerform node);
    void caseACashewPerformAchievegoalCashewPerformAlt(ACashewPerformAchievegoalCashewPerformAlt node);
    void caseACashewPerformReceiveCashewPerformAlt(ACashewPerformReceiveCashewPerformAlt node);
    void caseACashewPerformSendCashewPerformAlt(ACashewPerformSendCashewPerformAlt node);
    void caseACashewPerformWorkflowCashewPerformAlt(ACashewPerformWorkflowCashewPerformAlt node);
    void caseAAtomPerform(AAtomPerform node);
    void caseAAtomPerformAchievegoalAtomPerformAlt(AAtomPerformAchievegoalAtomPerformAlt node);
    void caseAAtomPerformReceiveAtomPerformAlt(AAtomPerformReceiveAtomPerformAlt node);
    void caseAAtomPerformSendAtomPerformAlt(AAtomPerformSendAtomPerformAlt node);
    void caseACashewWorkflowDef(ACashewWorkflowDef node);
    void caseASequentialWorkflowPattern(ASequentialWorkflowPattern node);
    void caseAConcurrentWorkflowPattern(AConcurrentWorkflowPattern node);
    void caseAInterleavedWorkflowPattern(AInterleavedWorkflowPattern node);
    void caseAXorWorkflowPattern(AXorWorkflowPattern node);
    void caseAWhileWorkflowPattern(AWhileWorkflowPattern node);
    void caseAUntilWorkflowPattern(AUntilWorkflowPattern node);
    void caseADeferredchoiceWorkflowPattern(ADeferredchoiceWorkflowPattern node);
    void caseADeferredwhileWorkflowPattern(ADeferredwhileWorkflowPattern node);
    void caseADeferreduntilWorkflowPattern(ADeferreduntilWorkflowPattern node);
    void caseAIf(AIf node);
    void caseAMin2perflist(AMin2perflist node);
    void caseAMoreperfs(AMoreperfs node);
    void caseAMin2choicelist(AMin2choicelist node);
    void caseAMorechoices(AMorechoices node);
    void caseAEnables(AEnables node);
    void caseADataflowMediators(ADataflowMediators node);

    void caseTTBlank(TTBlank node);
    void caseTTComment(TTComment node);
    void caseTComma(TComma node);
    void caseTEndpoint(TEndpoint node);
    void caseTLpar(TLpar node);
    void caseTRpar(TRpar node);
    void caseTLbracket(TLbracket node);
    void caseTRbracket(TRbracket node);
    void caseTLbrace(TLbrace node);
    void caseTRbrace(TRbrace node);
    void caseTHash(THash node);
    void caseTTAnd(TTAnd node);
    void caseTTOr(TTOr node);
    void caseTTImplies(TTImplies node);
    void caseTTImpliedBy(TTImpliedBy node);
    void caseTTEquivalent(TTEquivalent node);
    void caseTTImpliedByLp(TTImpliedByLp node);
    void caseTTConstraint(TTConstraint node);
    void caseTTNot(TTNot node);
    void caseTTExists(TTExists node);
    void caseTTForall(TTForall node);
    void caseTTUnivfalse(TTUnivfalse node);
    void caseTTUnivtrue(TTUnivtrue node);
    void caseTGt(TGt node);
    void caseTLt(TLt node);
    void caseTGte(TGte node);
    void caseTLte(TLte node);
    void caseTEqual(TEqual node);
    void caseTStrongEqual(TStrongEqual node);
    void caseTUnequal(TUnequal node);
    void caseTAddOp(TAddOp node);
    void caseTSubOp(TSubOp node);
    void caseTStar(TStar node);
    void caseTDivOp(TDivOp node);
    void caseTTAssumption(TTAssumption node);
    void caseTTAxiom(TTAxiom node);
    void caseTTCapability(TTCapability node);
    void caseTTChoreography(TTChoreography node);
    void caseTTConcept(TTConcept node);
    void caseTTDefinedby(TTDefinedby node);
    void caseTTEffect(TTEffect node);
    void caseTTEndnfp(TTEndnfp node);
    void caseTTGgmediator(TTGgmediator node);
    void caseTTGoal(TTGoal node);
    void caseTTHasvalue(TTHasvalue node);
    void caseTTImpliestype(TTImpliestype node);
    void caseTTImportontology(TTImportontology node);
    void caseTTInstance(TTInstance node);
    void caseTTInterface(TTInterface node);
    void caseTTInverseof(TTInverseof node);
    void caseTTMemberof(TTMemberof node);
    void caseTTNamespace(TTNamespace node);
    void caseTTNfp(TTNfp node);
    void caseTTOftype(TTOftype node);
    void caseTTOntology(TTOntology node);
    void caseTTOomediator(TTOomediator node);
    void caseTTOrchestration(TTOrchestration node);
    void caseTTPostcondition(TTPostcondition node);
    void caseTTPrecondition(TTPrecondition node);
    void caseTTReflexive(TTReflexive node);
    void caseTTRelation(TTRelation node);
    void caseTTRelationInstance(TTRelationInstance node);
    void caseTTSharedvariable(TTSharedvariable node);
    void caseTTSource(TTSource node);
    void caseTTSubconcept(TTSubconcept node);
    void caseTTSubrelation(TTSubrelation node);
    void caseTTSymmetric(TTSymmetric node);
    void caseTTTarget(TTTarget node);
    void caseTTTransitive(TTTransitive node);
    void caseTTUsemediator(TTUsemediator node);
    void caseTTUseservice(TTUseservice node);
    void caseTTWebservice(TTWebservice node);
    void caseTTWgmediator(TTWgmediator node);
    void caseTTWsmlvariant(TTWsmlvariant node);
    void caseTTWwmediator(TTWwmediator node);
    void caseTTPerform(TTPerform node);
    void caseTTAchievegoal(TTAchievegoal node);
    void caseTTMediation(TTMediation node);
    void caseTTReceive(TTReceive node);
    void caseTTSend(TTSend node);
    void caseTTWorkflow(TTWorkflow node);
    void caseTTPpmediator(TTPpmediator node);
    void caseTTPfmediator(TTPfmediator node);
    void caseTTAdd(TTAdd node);
    void caseTTAt(TTAt node);
    void caseTTAsm(TTAsm node);
    void caseTTChoose(TTChoose node);
    void caseTTControlled(TTControlled node);
    void caseTTDelete(TTDelete node);
    void caseTTDo(TTDo node);
    void caseTTEndcapability(TTEndcapability node);
    void caseTTEndchoose(TTEndchoose node);
    void caseTTEndforall(TTEndforall node);
    void caseTTEndif(TTEndif node);
    void caseTTHascapability(TTHascapability node);
    void caseTTTransitions(TTTransitions node);
    void caseTTIf(TTIf node);
    void caseTTIn(TTIn node);
    void caseTTMoveto(TTMoveto node);
    void caseTTOut(TTOut node);
    void caseTTPipe(TTPipe node);
    void caseTTShared(TTShared node);
    void caseTTStateSignature(TTStateSignature node);
    void caseTTStatic(TTStatic node);
    void caseTTThen(TTThen node);
    void caseTTUpdate(TTUpdate node);
    void caseTTWith(TTWith node);
    void caseTTWithGrounding(TTWithGrounding node);
    void caseTTApplieschoreography(TTApplieschoreography node);
    void caseTTInvokeservice(TTInvokeservice node);
    void caseTTApplymediation(TTApplymediation node);
    void caseTTActivitygroup(TTActivitygroup node);
    void caseTTActivitydiagram(TTActivitydiagram node);
    void caseTTGeneralaction(TTGeneralaction node);
    void caseTTAdmediator(TTAdmediator node);
    void caseTTAggregation(TTAggregation node);
    void caseTTFlowstart(TTFlowstart node);
    void caseTTFlowfinal(TTFlowfinal node);
    void caseTTActivityfinal(TTActivityfinal node);
    void caseTTExtraction(TTExtraction node);
    void caseTTFork(TTFork node);
    void caseTTJoin(TTJoin node);
    void caseTTDecision(TTDecision node);
    void caseTTMerge(TTMerge node);
    void caseTTSendeventaction(TTSendeventaction node);
    void caseTTAccepteventaction(TTAccepteventaction node);
    void caseTTInputpin(TTInputpin node);
    void caseTTInterruptibleregion(TTInterruptibleregion node);
    void caseTTObjectnode(TTObjectnode node);
    void caseTTOutputpin(TTOutputpin node);
    void caseTTOperation(TTOperation node);
    void caseTTControlflow(TTControlflow node);
    void caseTTDataflow(TTDataflow node);
    void caseTTGuard(TTGuard node);
    void caseTTElse(TTElse node);
    void caseTTStartnode(TTStartnode node);
    void caseTTInterrupts(TTInterrupts node);
    void caseTTSslink(TTSslink node);
    void caseTTCarriesconcept(TTCarriesconcept node);
    void caseTTPartnerlink(TTPartnerlink node);
    void caseTTEnables(TTEnables node);
    void caseTTCashewworkflow(TTCashewworkflow node);
    void caseTTDefines(TTDefines node);
    void caseTTSequential(TTSequential node);
    void caseTTConcurrent(TTConcurrent node);
    void caseTTInterleaved(TTInterleaved node);
    void caseTTXor(TTXor node);
    void caseTTWhile(TTWhile node);
    void caseTTUntil(TTUntil node);
    void caseTTDeferredchoice(TTDeferredchoice node);
    void caseTTDeferredwhile(TTDeferredwhile node);
    void caseTTDeferreduntil(TTDeferreduntil node);
    void caseTTUnless(TTUnless node);
    void caseTTRepeat(TTRepeat node);
    void caseTTDataflowmediators(TTDataflowmediators node);
    void caseTVariable(TVariable node);
    void caseTAnonymous(TAnonymous node);
    void caseTNbAnonymous(TNbAnonymous node);
    void caseTPosInteger(TPosInteger node);
    void caseTPosDecimal(TPosDecimal node);
    void caseTString(TString node);
    void caseTFullIri(TFullIri node);
    void caseTName(TName node);
    void caseEOF(EOF node);
}
