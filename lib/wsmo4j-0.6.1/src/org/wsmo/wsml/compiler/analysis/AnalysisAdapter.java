/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.wsmo.wsml.compiler.analysis;

import java.util.*;
import org.wsmo.wsml.compiler.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable in;
    private Hashtable out;

    public Object getIn(Node node)
    {
        if(in == null)
        {
            return null;
        }

        return in.get(node);
    }

    public void setIn(Node node, Object in)
    {
        if(this.in == null)
        {
            this.in = new Hashtable(1);
        }

        if(in != null)
        {
            this.in.put(node, in);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(out == null)
        {
            return null;
        }

        return out.get(node);
    }

    public void setOut(Node node, Object out)
    {
        if(this.out == null)
        {
            this.out = new Hashtable(1);
        }

        if(out != null)
        {
            this.out.put(node, out);
        }
        else
        {
            this.out.remove(node);
        }
    }
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAWsml(AWsml node)
    {
        defaultCase(node);
    }

    public void caseAWsmlvariant(AWsmlvariant node)
    {
        defaultCase(node);
    }

    public void caseANamespace(ANamespace node)
    {
        defaultCase(node);
    }

    public void caseADefaultnsPrefixdefinitionlist(ADefaultnsPrefixdefinitionlist node)
    {
        defaultCase(node);
    }

    public void caseAPrefixdefinitionlistPrefixdefinitionlist(APrefixdefinitionlistPrefixdefinitionlist node)
    {
        defaultCase(node);
    }

    public void caseANamespacedefPrefixdefinition(ANamespacedefPrefixdefinition node)
    {
        defaultCase(node);
    }

    public void caseADefaultPrefixdefinition(ADefaultPrefixdefinition node)
    {
        defaultCase(node);
    }

    public void caseAMoreprefixdefinitions(AMoreprefixdefinitions node)
    {
        defaultCase(node);
    }

    public void caseAGoalDefinition(AGoalDefinition node)
    {
        defaultCase(node);
    }

    public void caseAOntologyDefinition(AOntologyDefinition node)
    {
        defaultCase(node);
    }

    public void caseAWebserviceDefinition(AWebserviceDefinition node)
    {
        defaultCase(node);
    }

    public void caseAMediatorDefinition(AMediatorDefinition node)
    {
        defaultCase(node);
    }

    public void caseANfpHeader(ANfpHeader node)
    {
        defaultCase(node);
    }

    public void caseAUsesmediatorHeader(AUsesmediatorHeader node)
    {
        defaultCase(node);
    }

    public void caseAImportsontologyHeader(AImportsontologyHeader node)
    {
        defaultCase(node);
    }

    public void caseAUsesmediator(AUsesmediator node)
    {
        defaultCase(node);
    }

    public void caseAImportsontology(AImportsontology node)
    {
        defaultCase(node);
    }

    public void caseANfp(ANfp node)
    {
        defaultCase(node);
    }

    public void caseAOomediatorMediator(AOomediatorMediator node)
    {
        defaultCase(node);
    }

    public void caseAGgmediatorMediator(AGgmediatorMediator node)
    {
        defaultCase(node);
    }

    public void caseAWgmediatorMediator(AWgmediatorMediator node)
    {
        defaultCase(node);
    }

    public void caseAWwmediatorMediator(AWwmediatorMediator node)
    {
        defaultCase(node);
    }

    public void caseAPpmediatorMediator(APpmediatorMediator node)
    {
        defaultCase(node);
    }

    public void caseAPfmediatorMediator(APfmediatorMediator node)
    {
        defaultCase(node);
    }

    public void caseAOomediator(AOomediator node)
    {
        defaultCase(node);
    }

    public void caseAGgmediator(AGgmediator node)
    {
        defaultCase(node);
    }

    public void caseAWgmediator(AWgmediator node)
    {
        defaultCase(node);
    }

    public void caseAWwmediator(AWwmediator node)
    {
        defaultCase(node);
    }

    public void caseAPpmediator(APpmediator node)
    {
        defaultCase(node);
    }

    public void caseAPfmediator(APfmediator node)
    {
        defaultCase(node);
    }

    public void caseAUseService(AUseService node)
    {
        defaultCase(node);
    }

    public void caseASource(ASource node)
    {
        defaultCase(node);
    }

    public void caseAMsources(AMsources node)
    {
        defaultCase(node);
    }

    public void caseASingleSources(ASingleSources node)
    {
        defaultCase(node);
    }

    public void caseAMultipleSources(AMultipleSources node)
    {
        defaultCase(node);
    }

    public void caseATarget(ATarget node)
    {
        defaultCase(node);
    }

    public void caseAClientChoreography(AClientChoreography node)
    {
        defaultCase(node);
    }

    public void caseAGoal(AGoal node)
    {
        defaultCase(node);
    }

    public void caseAWebservice(AWebservice node)
    {
        defaultCase(node);
    }

    public void caseACapability(ACapability node)
    {
        defaultCase(node);
    }

    public void caseASharedvardef(ASharedvardef node)
    {
        defaultCase(node);
    }

    public void caseAPreconditionPrePostAssOrEff(APreconditionPrePostAssOrEff node)
    {
        defaultCase(node);
    }

    public void caseAPostconditionPrePostAssOrEff(APostconditionPrePostAssOrEff node)
    {
        defaultCase(node);
    }

    public void caseAAssumptionPrePostAssOrEff(AAssumptionPrePostAssOrEff node)
    {
        defaultCase(node);
    }

    public void caseAEffectPrePostAssOrEff(AEffectPrePostAssOrEff node)
    {
        defaultCase(node);
    }

    public void caseASingleInterfaces(ASingleInterfaces node)
    {
        defaultCase(node);
    }

    public void caseAMultipleInterfaces(AMultipleInterfaces node)
    {
        defaultCase(node);
    }

    public void caseAMinterfaces(AMinterfaces node)
    {
        defaultCase(node);
    }

    public void caseAInterface(AInterface node)
    {
        defaultCase(node);
    }

    public void caseAChoreography(AChoreography node)
    {
        defaultCase(node);
    }

    public void caseAOrchestration(AOrchestration node)
    {
        defaultCase(node);
    }

    public void caseAChorAsmChoreographyFormalism(AChorAsmChoreographyFormalism node)
    {
        defaultCase(node);
    }

    public void caseAChorAdChoreographyFormalism(AChorAdChoreographyFormalism node)
    {
        defaultCase(node);
    }

    public void caseAChorCashewChoreographyFormalism(AChorCashewChoreographyFormalism node)
    {
        defaultCase(node);
    }

    public void caseAOrchAsmOrchestrationFormalism(AOrchAsmOrchestrationFormalism node)
    {
        defaultCase(node);
    }

    public void caseAOrchAdOrchestrationFormalism(AOrchAdOrchestrationFormalism node)
    {
        defaultCase(node);
    }

    public void caseAOrchCashewOrchestrationFormalism(AOrchCashewOrchestrationFormalism node)
    {
        defaultCase(node);
    }

    public void caseAStateSignature(AStateSignature node)
    {
        defaultCase(node);
    }

    public void caseATransitions(ATransitions node)
    {
        defaultCase(node);
    }

    public void caseAMode(AMode node)
    {
        defaultCase(node);
    }

    public void caseAModeEntryModeEntryList(AModeEntryModeEntryList node)
    {
        defaultCase(node);
    }

    public void caseAModeEntryListModeEntryList(AModeEntryListModeEntryList node)
    {
        defaultCase(node);
    }

    public void caseAStaticModeId(AStaticModeId node)
    {
        defaultCase(node);
    }

    public void caseAInModeId(AInModeId node)
    {
        defaultCase(node);
    }

    public void caseAOutModeId(AOutModeId node)
    {
        defaultCase(node);
    }

    public void caseASharedModeId(ASharedModeId node)
    {
        defaultCase(node);
    }

    public void caseAControlledModeId(AControlledModeId node)
    {
        defaultCase(node);
    }

    public void caseADefaultModeModeEntry(ADefaultModeModeEntry node)
    {
        defaultCase(node);
    }

    public void caseAConceptModeModeEntry(AConceptModeModeEntry node)
    {
        defaultCase(node);
    }

    public void caseARelationModeModeEntry(ARelationModeModeEntry node)
    {
        defaultCase(node);
    }

    public void caseAGrounding(AGrounding node)
    {
        defaultCase(node);
    }

    public void caseAIriGroundingInfo(AIriGroundingInfo node)
    {
        defaultCase(node);
    }

    public void caseAIrilistGroundingInfo(AIrilistGroundingInfo node)
    {
        defaultCase(node);
    }

    public void caseAIriIrilist(AIriIrilist node)
    {
        defaultCase(node);
    }

    public void caseAIrilistIrilist(AIrilistIrilist node)
    {
        defaultCase(node);
    }

    public void caseAIfRule(AIfRule node)
    {
        defaultCase(node);
    }

    public void caseAForallRule(AForallRule node)
    {
        defaultCase(node);
    }

    public void caseAChooseRule(AChooseRule node)
    {
        defaultCase(node);
    }

    public void caseAUpdatesRule(AUpdatesRule node)
    {
        defaultCase(node);
    }

    public void caseAPipedRulePipedRule(APipedRulePipedRule node)
    {
        defaultCase(node);
    }

    public void caseAUpdaterule(AUpdaterule node)
    {
        defaultCase(node);
    }

    public void caseAAddModifier(AAddModifier node)
    {
        defaultCase(node);
    }

    public void caseADeleteModifier(ADeleteModifier node)
    {
        defaultCase(node);
    }

    public void caseAUpdateModifier(AUpdateModifier node)
    {
        defaultCase(node);
    }

    public void caseAFactPreferredFact(AFactPreferredFact node)
    {
        defaultCase(node);
    }

    public void caseAFactNonpreferredFact(AFactNonpreferredFact node)
    {
        defaultCase(node);
    }

    public void caseAFactMoleculeFact(AFactMoleculeFact node)
    {
        defaultCase(node);
    }

    public void caseAFactRelationFact(AFactRelationFact node)
    {
        defaultCase(node);
    }

    public void caseAFactUpdate(AFactUpdate node)
    {
        defaultCase(node);
    }

    public void caseAAttrFact(AAttrFact node)
    {
        defaultCase(node);
    }

    public void caseAAttrRelationAttrFactList(AAttrRelationAttrFactList node)
    {
        defaultCase(node);
    }

    public void caseAAttrFactList(AAttrFactList node)
    {
        defaultCase(node);
    }

    public void caseAOneParamTermUpdates(AOneParamTermUpdates node)
    {
        defaultCase(node);
    }

    public void caseAMoreParamsTermUpdates(AMoreParamsTermUpdates node)
    {
        defaultCase(node);
    }

    public void caseASingleTermUpdate(ASingleTermUpdate node)
    {
        defaultCase(node);
    }

    public void caseAMoveTermUpdate(AMoveTermUpdate node)
    {
        defaultCase(node);
    }

    public void caseANewTermNewTerm(ANewTermNewTerm node)
    {
        defaultCase(node);
    }

    public void caseARestrictedLeCondition(ARestrictedLeCondition node)
    {
        defaultCase(node);
    }

    public void caseAOrchestrationTransitions(AOrchestrationTransitions node)
    {
        defaultCase(node);
    }

    public void caseAOrchIfOrchestrationRule(AOrchIfOrchestrationRule node)
    {
        defaultCase(node);
    }

    public void caseAOrchForallOrchestrationRule(AOrchForallOrchestrationRule node)
    {
        defaultCase(node);
    }

    public void caseAOrchChooseOrchestrationRule(AOrchChooseOrchestrationRule node)
    {
        defaultCase(node);
    }

    public void caseAOrchUpdatesOrchestrationRule(AOrchUpdatesOrchestrationRule node)
    {
        defaultCase(node);
    }

    public void caseAOrchPerformOrchestrationRule(AOrchPerformOrchestrationRule node)
    {
        defaultCase(node);
    }

    public void caseAOrchPerformAchievegoalOrchPerformAlt(AOrchPerformAchievegoalOrchPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseAOrchInvokeServiceOrchPerformAlt(AOrchInvokeServiceOrchPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseAOrchApplyMediationOrchPerformAlt(AOrchApplyMediationOrchPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseAOrchPerformReceiveOrchPerformAlt(AOrchPerformReceiveOrchPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseAOrchPerformSendOrchPerformAlt(AOrchPerformSendOrchPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseAPipedRuleOrchPipedRule(APipedRuleOrchPipedRule node)
    {
        defaultCase(node);
    }

    public void caseAOntology(AOntology node)
    {
        defaultCase(node);
    }

    public void caseAConceptOntologyElement(AConceptOntologyElement node)
    {
        defaultCase(node);
    }

    public void caseAInstanceOntologyElement(AInstanceOntologyElement node)
    {
        defaultCase(node);
    }

    public void caseARelationOntologyElement(ARelationOntologyElement node)
    {
        defaultCase(node);
    }

    public void caseARelationinstanceOntologyElement(ARelationinstanceOntologyElement node)
    {
        defaultCase(node);
    }

    public void caseAAxiomOntologyElement(AAxiomOntologyElement node)
    {
        defaultCase(node);
    }

    public void caseAConcept(AConcept node)
    {
        defaultCase(node);
    }

    public void caseASuperconcept(ASuperconcept node)
    {
        defaultCase(node);
    }

    public void caseAOpenWorldAttType(AOpenWorldAttType node)
    {
        defaultCase(node);
    }

    public void caseAClosedWorldAttType(AClosedWorldAttType node)
    {
        defaultCase(node);
    }

    public void caseAAttribute(AAttribute node)
    {
        defaultCase(node);
    }

    public void caseACardinality(ACardinality node)
    {
        defaultCase(node);
    }

    public void caseAFiniteCardinalityCardinalityNumber(AFiniteCardinalityCardinalityNumber node)
    {
        defaultCase(node);
    }

    public void caseAInfiniteCardinalityCardinalityNumber(AInfiniteCardinalityCardinalityNumber node)
    {
        defaultCase(node);
    }

    public void caseATransitiveAttributefeature(ATransitiveAttributefeature node)
    {
        defaultCase(node);
    }

    public void caseASymmetricAttributefeature(ASymmetricAttributefeature node)
    {
        defaultCase(node);
    }

    public void caseAInverseAttributefeature(AInverseAttributefeature node)
    {
        defaultCase(node);
    }

    public void caseAReflexiveAttributefeature(AReflexiveAttributefeature node)
    {
        defaultCase(node);
    }

    public void caseAInstance(AInstance node)
    {
        defaultCase(node);
    }

    public void caseAMemberof(AMemberof node)
    {
        defaultCase(node);
    }

    public void caseAAttributevalue(AAttributevalue node)
    {
        defaultCase(node);
    }

    public void caseARelation(ARelation node)
    {
        defaultCase(node);
    }

    public void caseAParamtyping(AParamtyping node)
    {
        defaultCase(node);
    }

    public void caseAParamtype(AParamtype node)
    {
        defaultCase(node);
    }

    public void caseAMoreparamtype(AMoreparamtype node)
    {
        defaultCase(node);
    }

    public void caseASuperrelation(ASuperrelation node)
    {
        defaultCase(node);
    }

    public void caseAArity(AArity node)
    {
        defaultCase(node);
    }

    public void caseARelationinstance(ARelationinstance node)
    {
        defaultCase(node);
    }

    public void caseAAxiom(AAxiom node)
    {
        defaultCase(node);
    }

    public void caseAUseAxiomAxiomdefinition(AUseAxiomAxiomdefinition node)
    {
        defaultCase(node);
    }

    public void caseANfpAxiomAxiomdefinition(ANfpAxiomAxiomdefinition node)
    {
        defaultCase(node);
    }

    public void caseADefinedAxiomAxiomdefinition(ADefinedAxiomAxiomdefinition node)
    {
        defaultCase(node);
    }

    public void caseALogDefinition(ALogDefinition node)
    {
        defaultCase(node);
    }

    public void caseALpRuleLogExpr(ALpRuleLogExpr node)
    {
        defaultCase(node);
    }

    public void caseAConstraintLogExpr(AConstraintLogExpr node)
    {
        defaultCase(node);
    }

    public void caseAOtherExpressionLogExpr(AOtherExpressionLogExpr node)
    {
        defaultCase(node);
    }

    public void caseAImplicationExpr(AImplicationExpr node)
    {
        defaultCase(node);
    }

    public void caseADisjunctionExpr(ADisjunctionExpr node)
    {
        defaultCase(node);
    }

    public void caseAConjunctionDisjunction(AConjunctionDisjunction node)
    {
        defaultCase(node);
    }

    public void caseADisjunction(ADisjunction node)
    {
        defaultCase(node);
    }

    public void caseASubexprConjunction(ASubexprConjunction node)
    {
        defaultCase(node);
    }

    public void caseAConjunction(AConjunction node)
    {
        defaultCase(node);
    }

    public void caseANegatedSubexpr(ANegatedSubexpr node)
    {
        defaultCase(node);
    }

    public void caseASimpleSubexpr(ASimpleSubexpr node)
    {
        defaultCase(node);
    }

    public void caseAComplexSubexpr(AComplexSubexpr node)
    {
        defaultCase(node);
    }

    public void caseAQuantifiedSubexpr(AQuantifiedSubexpr node)
    {
        defaultCase(node);
    }

    public void caseAQuantified(AQuantified node)
    {
        defaultCase(node);
    }

    public void caseAMoleculeSimple(AMoleculeSimple node)
    {
        defaultCase(node);
    }

    public void caseAComparisonSimple(AComparisonSimple node)
    {
        defaultCase(node);
    }

    public void caseAAtomSimple(AAtomSimple node)
    {
        defaultCase(node);
    }

    public void caseAConceptMoleculePreferredMolecule(AConceptMoleculePreferredMolecule node)
    {
        defaultCase(node);
    }

    public void caseAConceptMoleculeNonpreferredMolecule(AConceptMoleculeNonpreferredMolecule node)
    {
        defaultCase(node);
    }

    public void caseAAttributeMoleculeMolecule(AAttributeMoleculeMolecule node)
    {
        defaultCase(node);
    }

    public void caseAAttrSpecification(AAttrSpecification node)
    {
        defaultCase(node);
    }

    public void caseAAttrRelationAttrRelList(AAttrRelationAttrRelList node)
    {
        defaultCase(node);
    }

    public void caseAAttrRelList(AAttrRelList node)
    {
        defaultCase(node);
    }

    public void caseAAttrDefAttrRelation(AAttrDefAttrRelation node)
    {
        defaultCase(node);
    }

    public void caseAAttrValAttrRelation(AAttrValAttrRelation node)
    {
        defaultCase(node);
    }

    public void caseAComparison(AComparison node)
    {
        defaultCase(node);
    }

    public void caseAParametrizedFunctionsymbol(AParametrizedFunctionsymbol node)
    {
        defaultCase(node);
    }

    public void caseAMathFunctionsymbol(AMathFunctionsymbol node)
    {
        defaultCase(node);
    }

    public void caseAArithVal(AArithVal node)
    {
        defaultCase(node);
    }

    public void caseAAdditionArithVal(AAdditionArithVal node)
    {
        defaultCase(node);
    }

    public void caseASemisimple1AdditionArithVal(ASemisimple1AdditionArithVal node)
    {
        defaultCase(node);
    }

    public void caseASemisimple2AdditionArithVal(ASemisimple2AdditionArithVal node)
    {
        defaultCase(node);
    }

    public void caseASimpleAdditionArithVal(ASimpleAdditionArithVal node)
    {
        defaultCase(node);
    }

    public void caseAMultVal(AMultVal node)
    {
        defaultCase(node);
    }

    public void caseAMultiplicationMultVal(AMultiplicationMultVal node)
    {
        defaultCase(node);
    }

    public void caseAArithMathOp(AArithMathOp node)
    {
        defaultCase(node);
    }

    public void caseAMultMathOp(AMultMathOp node)
    {
        defaultCase(node);
    }

    public void caseAAddArithOp(AAddArithOp node)
    {
        defaultCase(node);
    }

    public void caseASubArithOp(ASubArithOp node)
    {
        defaultCase(node);
    }

    public void caseAMulMulOp(AMulMulOp node)
    {
        defaultCase(node);
    }

    public void caseADivMulOp(ADivMulOp node)
    {
        defaultCase(node);
    }

    public void caseAGtCompOp(AGtCompOp node)
    {
        defaultCase(node);
    }

    public void caseALtCompOp(ALtCompOp node)
    {
        defaultCase(node);
    }

    public void caseAGteCompOp(AGteCompOp node)
    {
        defaultCase(node);
    }

    public void caseALteCompOp(ALteCompOp node)
    {
        defaultCase(node);
    }

    public void caseAEqualCompOp(AEqualCompOp node)
    {
        defaultCase(node);
    }

    public void caseAStrongEqualCompOp(AStrongEqualCompOp node)
    {
        defaultCase(node);
    }

    public void caseAUnequalCompOp(AUnequalCompOp node)
    {
        defaultCase(node);
    }

    public void caseAMemberofCptOp(AMemberofCptOp node)
    {
        defaultCase(node);
    }

    public void caseASubconceptofCptOp(ASubconceptofCptOp node)
    {
        defaultCase(node);
    }

    public void caseAForallQuantifierKey(AForallQuantifierKey node)
    {
        defaultCase(node);
    }

    public void caseAExistsQuantifierKey(AExistsQuantifierKey node)
    {
        defaultCase(node);
    }

    public void caseAOftypeAttrDefOp(AOftypeAttrDefOp node)
    {
        defaultCase(node);
    }

    public void caseAImpliestypeAttrDefOp(AImpliestypeAttrDefOp node)
    {
        defaultCase(node);
    }

    public void caseAImpliesImplyOp(AImpliesImplyOp node)
    {
        defaultCase(node);
    }

    public void caseAImpliedbyImplyOp(AImpliedbyImplyOp node)
    {
        defaultCase(node);
    }

    public void caseAEquivalentImplyOp(AEquivalentImplyOp node)
    {
        defaultCase(node);
    }

    public void caseAPrefix(APrefix node)
    {
        defaultCase(node);
    }

    public void caseAAnySqname(AAnySqname node)
    {
        defaultCase(node);
    }

    public void caseALocalkeywordSqname(ALocalkeywordSqname node)
    {
        defaultCase(node);
    }

    public void caseAAndAnykeyword(AAndAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAOrAnykeyword(AOrAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAImpliesAnykeyword(AImpliesAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAImpliedByAnykeyword(AImpliedByAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAEquivalentAnykeyword(AEquivalentAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAImpliedByLpAnykeyword(AImpliedByLpAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAConstraintAnykeyword(AConstraintAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseANotAnykeyword(ANotAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAExistsAnykeyword(AExistsAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAForallAnykeyword(AForallAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAUnivfalseAnykeyword(AUnivfalseAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAUnivtrueAnykeyword(AUnivtrueAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAAssumptionAnykeyword(AAssumptionAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAAxiomAnykeyword(AAxiomAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseACapabilityAnykeyword(ACapabilityAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAChoreographyAnykeyword(AChoreographyAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAConceptAnykeyword(AConceptAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseADefinedbyAnykeyword(ADefinedbyAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAEffectAnykeyword(AEffectAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAEndnfpAnykeyword(AEndnfpAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAGgmediatorAnykeyword(AGgmediatorAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAGoalAnykeyword(AGoalAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAHasvalueAnykeyword(AHasvalueAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAImpliestypeAnykeyword(AImpliestypeAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAImportontologyAnykeyword(AImportontologyAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAInstanceAnykeyword(AInstanceAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAInterfaceAnykeyword(AInterfaceAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAInverseofAnykeyword(AInverseofAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAMemberofAnykeyword(AMemberofAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseANamespaceAnykeyword(ANamespaceAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseANfpAnykeyword(ANfpAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAOftypeAnykeyword(AOftypeAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAOntologyAnykeyword(AOntologyAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAOomediatorAnykeyword(AOomediatorAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAOrchestrationAnykeyword(AOrchestrationAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAPostconditionAnykeyword(APostconditionAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAPreconditionAnykeyword(APreconditionAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAReflexiveAnykeyword(AReflexiveAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseARelationAnykeyword(ARelationAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseARelationInstanceAnykeyword(ARelationInstanceAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseASharedvariableAnykeyword(ASharedvariableAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseASourceAnykeyword(ASourceAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseASubconceptAnykeyword(ASubconceptAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseASubrelationAnykeyword(ASubrelationAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseASymmetricAnykeyword(ASymmetricAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseATargetAnykeyword(ATargetAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseATransitiveAnykeyword(ATransitiveAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAUsemediatorAnykeyword(AUsemediatorAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAUseserviceAnykeyword(AUseserviceAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAWebserviceAnykeyword(AWebserviceAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAWgmediatorAnykeyword(AWgmediatorAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAWsmlvariantAnykeyword(AWsmlvariantAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAWwmediatorAnykeyword(AWwmediatorAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAApplieschoreographyAnykeyword(AApplieschoreographyAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAPerformAnykeyword(APerformAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAAchievegoalAnykeyword(AAchievegoalAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAInvokeserviceAnykeyword(AInvokeserviceAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAApplymediationAnykeyword(AApplymediationAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseASendAnykeyword(ASendAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAReceiveAnykeyword(AReceiveAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAPpmediatorAnykeyword(APpmediatorAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAPfmediatorAnykeyword(APfmediatorAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAActivitygroupAnykeyword(AActivitygroupAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAMediatorAnykeyword(AMediatorAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAFlowstartAnykeyword(AFlowstartAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAFlowfinalAnykeyword(AFlowfinalAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAActivityfinalAnykeyword(AActivityfinalAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAAggregationAnykeyword(AAggregationAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAForkAnykeyword(AForkAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAJoinAnykeyword(AJoinAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseADecisionAnykeyword(ADecisionAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAMergeAnykeyword(AMergeAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseASendeventactionAnykeyword(ASendeventactionAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAInputpinAnykeyword(AInputpinAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAOutputpinAnykeyword(AOutputpinAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAControlflowAnykeyword(AControlflowAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseADataflowAnykeyword(ADataflowAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAGuardAnykeyword(AGuardAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAElseAnykeyword(AElseAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAStartnodeAnykeyword(AStartnodeAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAInterruptsAnykeyword(AInterruptsAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseACashewworkflowAnykeyword(ACashewworkflowAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseASequentialAnykeyword(ASequentialAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAConcurrentAnykeyword(AConcurrentAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAInterleavedAnykeyword(AInterleavedAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseADeferredchoiceAnykeyword(ADeferredchoiceAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseADeferredwhileAnykeyword(ADeferredwhileAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseADeferreduntilAnykeyword(ADeferreduntilAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseADataflowmediatorsAnykeyword(ADataflowmediatorsAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAWhileAnykeyword(AWhileAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAUntilAnykeyword(AUntilAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAUnlessAnykeyword(AUnlessAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseARepeatAnykeyword(ARepeatAnykeyword node)
    {
        defaultCase(node);
    }

    public void caseAIriIri(AIriIri node)
    {
        defaultCase(node);
    }

    public void caseASqnameIri(ASqnameIri node)
    {
        defaultCase(node);
    }

    public void caseAIriId(AIriId node)
    {
        defaultCase(node);
    }

    public void caseAAnonymousId(AAnonymousId node)
    {
        defaultCase(node);
    }

    public void caseAUniversalTruthId(AUniversalTruthId node)
    {
        defaultCase(node);
    }

    public void caseAUniversalFalsehoodId(AUniversalFalsehoodId node)
    {
        defaultCase(node);
    }

    public void caseAIdIdlist(AIdIdlist node)
    {
        defaultCase(node);
    }

    public void caseAIdlistIdlist(AIdlistIdlist node)
    {
        defaultCase(node);
    }

    public void caseAMoreids(AMoreids node)
    {
        defaultCase(node);
    }

    public void caseADatatypeValue(ADatatypeValue node)
    {
        defaultCase(node);
    }

    public void caseATermValue(ATermValue node)
    {
        defaultCase(node);
    }

    public void caseANumericValue(ANumericValue node)
    {
        defaultCase(node);
    }

    public void caseAStringValue(AStringValue node)
    {
        defaultCase(node);
    }

    public void caseATermValuelist(ATermValuelist node)
    {
        defaultCase(node);
    }

    public void caseAValuelistValuelist(AValuelistValuelist node)
    {
        defaultCase(node);
    }

    public void caseAMorevalues(AMorevalues node)
    {
        defaultCase(node);
    }

    public void caseADataTerm(ADataTerm node)
    {
        defaultCase(node);
    }

    public void caseAVarTerm(AVarTerm node)
    {
        defaultCase(node);
    }

    public void caseANbAnonymousTerm(ANbAnonymousTerm node)
    {
        defaultCase(node);
    }

    public void caseATermTerms(ATermTerms node)
    {
        defaultCase(node);
    }

    public void caseATerms(ATerms node)
    {
        defaultCase(node);
    }

    public void caseATermTermlist(ATermTermlist node)
    {
        defaultCase(node);
    }

    public void caseATermlist(ATermlist node)
    {
        defaultCase(node);
    }

    public void caseAVariableVariables(AVariableVariables node)
    {
        defaultCase(node);
    }

    public void caseAVariables(AVariables node)
    {
        defaultCase(node);
    }

    public void caseAVariableVariablelist(AVariableVariablelist node)
    {
        defaultCase(node);
    }

    public void caseAVariableListVariablelist(AVariableListVariablelist node)
    {
        defaultCase(node);
    }

    public void caseAInteger(AInteger node)
    {
        defaultCase(node);
    }

    public void caseADecimal(ADecimal node)
    {
        defaultCase(node);
    }

    public void caseAIntegerNumber(AIntegerNumber node)
    {
        defaultCase(node);
    }

    public void caseADecimalNumber(ADecimalNumber node)
    {
        defaultCase(node);
    }

    public void caseAActivityDiagram(AActivityDiagram node)
    {
        defaultCase(node);
    }

    public void caseAActivitygroupGroup(AActivitygroupGroup node)
    {
        defaultCase(node);
    }

    public void caseAInterruptibleregionGroup(AInterruptibleregionGroup node)
    {
        defaultCase(node);
    }

    public void caseAActivitygroupcontents(AActivitygroupcontents node)
    {
        defaultCase(node);
    }

    public void caseAGeneralactionNode(AGeneralactionNode node)
    {
        defaultCase(node);
    }

    public void caseAOomediatorNode(AOomediatorNode node)
    {
        defaultCase(node);
    }

    public void caseAFlowstartNode(AFlowstartNode node)
    {
        defaultCase(node);
    }

    public void caseAFlowfinalNode(AFlowfinalNode node)
    {
        defaultCase(node);
    }

    public void caseAActivityfinalNode(AActivityfinalNode node)
    {
        defaultCase(node);
    }

    public void caseAAggregationNode(AAggregationNode node)
    {
        defaultCase(node);
    }

    public void caseAExtractionNode(AExtractionNode node)
    {
        defaultCase(node);
    }

    public void caseAOperationNode(AOperationNode node)
    {
        defaultCase(node);
    }

    public void caseAForkNode(AForkNode node)
    {
        defaultCase(node);
    }

    public void caseAJoinNode(AJoinNode node)
    {
        defaultCase(node);
    }

    public void caseADecisionNode(ADecisionNode node)
    {
        defaultCase(node);
    }

    public void caseAMergeNode(AMergeNode node)
    {
        defaultCase(node);
    }

    public void caseASendeventactionNode(ASendeventactionNode node)
    {
        defaultCase(node);
    }

    public void caseAAccepteventactionNode(AAccepteventactionNode node)
    {
        defaultCase(node);
    }

    public void caseAObjectnodeNode(AObjectnodeNode node)
    {
        defaultCase(node);
    }

    public void caseADefinedby(ADefinedby node)
    {
        defaultCase(node);
    }

    public void caseAStartnode(AStartnode node)
    {
        defaultCase(node);
    }

    public void caseASslink(ASslink node)
    {
        defaultCase(node);
    }

    public void caseAAdlink(AAdlink node)
    {
        defaultCase(node);
    }

    public void caseACarriesconcept(ACarriesconcept node)
    {
        defaultCase(node);
    }

    public void caseAPartnerlink(APartnerlink node)
    {
        defaultCase(node);
    }

    public void caseANodecontents(ANodecontents node)
    {
        defaultCase(node);
    }

    public void caseAInputpinPin(AInputpinPin node)
    {
        defaultCase(node);
    }

    public void caseAOutputpinPin(AOutputpinPin node)
    {
        defaultCase(node);
    }

    public void caseAControlflowEdge(AControlflowEdge node)
    {
        defaultCase(node);
    }

    public void caseADataflowEdge(ADataflowEdge node)
    {
        defaultCase(node);
    }

    public void caseAEdgecontents(AEdgecontents node)
    {
        defaultCase(node);
    }

    public void caseAInterrupting(AInterrupting node)
    {
        defaultCase(node);
    }

    public void caseAElseGuard(AElseGuard node)
    {
        defaultCase(node);
    }

    public void caseAExpressionGuard(AExpressionGuard node)
    {
        defaultCase(node);
    }

    public void caseACashewWorkflow(ACashewWorkflow node)
    {
        defaultCase(node);
    }

    public void caseACashewSubDefs(ACashewSubDefs node)
    {
        defaultCase(node);
    }

    public void caseACashewPerform(ACashewPerform node)
    {
        defaultCase(node);
    }

    public void caseACashewPerformAchievegoalCashewPerformAlt(ACashewPerformAchievegoalCashewPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseACashewPerformReceiveCashewPerformAlt(ACashewPerformReceiveCashewPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseACashewPerformSendCashewPerformAlt(ACashewPerformSendCashewPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseACashewPerformWorkflowCashewPerformAlt(ACashewPerformWorkflowCashewPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseAAtomPerform(AAtomPerform node)
    {
        defaultCase(node);
    }

    public void caseAAtomPerformAchievegoalAtomPerformAlt(AAtomPerformAchievegoalAtomPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseAAtomPerformReceiveAtomPerformAlt(AAtomPerformReceiveAtomPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseAAtomPerformSendAtomPerformAlt(AAtomPerformSendAtomPerformAlt node)
    {
        defaultCase(node);
    }

    public void caseACashewWorkflowDef(ACashewWorkflowDef node)
    {
        defaultCase(node);
    }

    public void caseASequentialWorkflowPattern(ASequentialWorkflowPattern node)
    {
        defaultCase(node);
    }

    public void caseAConcurrentWorkflowPattern(AConcurrentWorkflowPattern node)
    {
        defaultCase(node);
    }

    public void caseAInterleavedWorkflowPattern(AInterleavedWorkflowPattern node)
    {
        defaultCase(node);
    }

    public void caseAXorWorkflowPattern(AXorWorkflowPattern node)
    {
        defaultCase(node);
    }

    public void caseAWhileWorkflowPattern(AWhileWorkflowPattern node)
    {
        defaultCase(node);
    }

    public void caseAUntilWorkflowPattern(AUntilWorkflowPattern node)
    {
        defaultCase(node);
    }

    public void caseADeferredchoiceWorkflowPattern(ADeferredchoiceWorkflowPattern node)
    {
        defaultCase(node);
    }

    public void caseADeferredwhileWorkflowPattern(ADeferredwhileWorkflowPattern node)
    {
        defaultCase(node);
    }

    public void caseADeferreduntilWorkflowPattern(ADeferreduntilWorkflowPattern node)
    {
        defaultCase(node);
    }

    public void caseAIf(AIf node)
    {
        defaultCase(node);
    }

    public void caseAMin2perflist(AMin2perflist node)
    {
        defaultCase(node);
    }

    public void caseAMoreperfs(AMoreperfs node)
    {
        defaultCase(node);
    }

    public void caseAMin2choicelist(AMin2choicelist node)
    {
        defaultCase(node);
    }

    public void caseAMorechoices(AMorechoices node)
    {
        defaultCase(node);
    }

    public void caseAEnables(AEnables node)
    {
        defaultCase(node);
    }

    public void caseADataflowMediators(ADataflowMediators node)
    {
        defaultCase(node);
    }

    public void caseTTBlank(TTBlank node)
    {
        defaultCase(node);
    }

    public void caseTTComment(TTComment node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTEndpoint(TEndpoint node)
    {
        defaultCase(node);
    }

    public void caseTLpar(TLpar node)
    {
        defaultCase(node);
    }

    public void caseTRpar(TRpar node)
    {
        defaultCase(node);
    }

    public void caseTLbracket(TLbracket node)
    {
        defaultCase(node);
    }

    public void caseTRbracket(TRbracket node)
    {
        defaultCase(node);
    }

    public void caseTLbrace(TLbrace node)
    {
        defaultCase(node);
    }

    public void caseTRbrace(TRbrace node)
    {
        defaultCase(node);
    }

    public void caseTHash(THash node)
    {
        defaultCase(node);
    }

    public void caseTTAnd(TTAnd node)
    {
        defaultCase(node);
    }

    public void caseTTOr(TTOr node)
    {
        defaultCase(node);
    }

    public void caseTTImplies(TTImplies node)
    {
        defaultCase(node);
    }

    public void caseTTImpliedBy(TTImpliedBy node)
    {
        defaultCase(node);
    }

    public void caseTTEquivalent(TTEquivalent node)
    {
        defaultCase(node);
    }

    public void caseTTImpliedByLp(TTImpliedByLp node)
    {
        defaultCase(node);
    }

    public void caseTTConstraint(TTConstraint node)
    {
        defaultCase(node);
    }

    public void caseTTNot(TTNot node)
    {
        defaultCase(node);
    }

    public void caseTTExists(TTExists node)
    {
        defaultCase(node);
    }

    public void caseTTForall(TTForall node)
    {
        defaultCase(node);
    }

    public void caseTTUnivfalse(TTUnivfalse node)
    {
        defaultCase(node);
    }

    public void caseTTUnivtrue(TTUnivtrue node)
    {
        defaultCase(node);
    }

    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    public void caseTGte(TGte node)
    {
        defaultCase(node);
    }

    public void caseTLte(TLte node)
    {
        defaultCase(node);
    }

    public void caseTEqual(TEqual node)
    {
        defaultCase(node);
    }

    public void caseTStrongEqual(TStrongEqual node)
    {
        defaultCase(node);
    }

    public void caseTUnequal(TUnequal node)
    {
        defaultCase(node);
    }

    public void caseTAddOp(TAddOp node)
    {
        defaultCase(node);
    }

    public void caseTSubOp(TSubOp node)
    {
        defaultCase(node);
    }

    public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    public void caseTDivOp(TDivOp node)
    {
        defaultCase(node);
    }

    public void caseTTAssumption(TTAssumption node)
    {
        defaultCase(node);
    }

    public void caseTTAxiom(TTAxiom node)
    {
        defaultCase(node);
    }

    public void caseTTCapability(TTCapability node)
    {
        defaultCase(node);
    }

    public void caseTTChoreography(TTChoreography node)
    {
        defaultCase(node);
    }

    public void caseTTConcept(TTConcept node)
    {
        defaultCase(node);
    }

    public void caseTTDefinedby(TTDefinedby node)
    {
        defaultCase(node);
    }

    public void caseTTEffect(TTEffect node)
    {
        defaultCase(node);
    }

    public void caseTTEndnfp(TTEndnfp node)
    {
        defaultCase(node);
    }

    public void caseTTGgmediator(TTGgmediator node)
    {
        defaultCase(node);
    }

    public void caseTTGoal(TTGoal node)
    {
        defaultCase(node);
    }

    public void caseTTHasvalue(TTHasvalue node)
    {
        defaultCase(node);
    }

    public void caseTTImpliestype(TTImpliestype node)
    {
        defaultCase(node);
    }

    public void caseTTImportontology(TTImportontology node)
    {
        defaultCase(node);
    }

    public void caseTTInstance(TTInstance node)
    {
        defaultCase(node);
    }

    public void caseTTInterface(TTInterface node)
    {
        defaultCase(node);
    }

    public void caseTTInverseof(TTInverseof node)
    {
        defaultCase(node);
    }

    public void caseTTMemberof(TTMemberof node)
    {
        defaultCase(node);
    }

    public void caseTTNamespace(TTNamespace node)
    {
        defaultCase(node);
    }

    public void caseTTNfp(TTNfp node)
    {
        defaultCase(node);
    }

    public void caseTTOftype(TTOftype node)
    {
        defaultCase(node);
    }

    public void caseTTOntology(TTOntology node)
    {
        defaultCase(node);
    }

    public void caseTTOomediator(TTOomediator node)
    {
        defaultCase(node);
    }

    public void caseTTOrchestration(TTOrchestration node)
    {
        defaultCase(node);
    }

    public void caseTTPostcondition(TTPostcondition node)
    {
        defaultCase(node);
    }

    public void caseTTPrecondition(TTPrecondition node)
    {
        defaultCase(node);
    }

    public void caseTTReflexive(TTReflexive node)
    {
        defaultCase(node);
    }

    public void caseTTRelation(TTRelation node)
    {
        defaultCase(node);
    }

    public void caseTTRelationInstance(TTRelationInstance node)
    {
        defaultCase(node);
    }

    public void caseTTSharedvariable(TTSharedvariable node)
    {
        defaultCase(node);
    }

    public void caseTTSource(TTSource node)
    {
        defaultCase(node);
    }

    public void caseTTSubconcept(TTSubconcept node)
    {
        defaultCase(node);
    }

    public void caseTTSubrelation(TTSubrelation node)
    {
        defaultCase(node);
    }

    public void caseTTSymmetric(TTSymmetric node)
    {
        defaultCase(node);
    }

    public void caseTTTarget(TTTarget node)
    {
        defaultCase(node);
    }

    public void caseTTTransitive(TTTransitive node)
    {
        defaultCase(node);
    }

    public void caseTTUsemediator(TTUsemediator node)
    {
        defaultCase(node);
    }

    public void caseTTUseservice(TTUseservice node)
    {
        defaultCase(node);
    }

    public void caseTTWebservice(TTWebservice node)
    {
        defaultCase(node);
    }

    public void caseTTWgmediator(TTWgmediator node)
    {
        defaultCase(node);
    }

    public void caseTTWsmlvariant(TTWsmlvariant node)
    {
        defaultCase(node);
    }

    public void caseTTWwmediator(TTWwmediator node)
    {
        defaultCase(node);
    }

    public void caseTTPerform(TTPerform node)
    {
        defaultCase(node);
    }

    public void caseTTAchievegoal(TTAchievegoal node)
    {
        defaultCase(node);
    }

    public void caseTTMediation(TTMediation node)
    {
        defaultCase(node);
    }

    public void caseTTReceive(TTReceive node)
    {
        defaultCase(node);
    }

    public void caseTTSend(TTSend node)
    {
        defaultCase(node);
    }

    public void caseTTWorkflow(TTWorkflow node)
    {
        defaultCase(node);
    }

    public void caseTTPpmediator(TTPpmediator node)
    {
        defaultCase(node);
    }

    public void caseTTPfmediator(TTPfmediator node)
    {
        defaultCase(node);
    }

    public void caseTTAdd(TTAdd node)
    {
        defaultCase(node);
    }

    public void caseTTAt(TTAt node)
    {
        defaultCase(node);
    }

    public void caseTTAsm(TTAsm node)
    {
        defaultCase(node);
    }

    public void caseTTChoose(TTChoose node)
    {
        defaultCase(node);
    }

    public void caseTTControlled(TTControlled node)
    {
        defaultCase(node);
    }

    public void caseTTDelete(TTDelete node)
    {
        defaultCase(node);
    }

    public void caseTTDo(TTDo node)
    {
        defaultCase(node);
    }

    public void caseTTEndcapability(TTEndcapability node)
    {
        defaultCase(node);
    }

    public void caseTTEndchoose(TTEndchoose node)
    {
        defaultCase(node);
    }

    public void caseTTEndforall(TTEndforall node)
    {
        defaultCase(node);
    }

    public void caseTTEndif(TTEndif node)
    {
        defaultCase(node);
    }

    public void caseTTHascapability(TTHascapability node)
    {
        defaultCase(node);
    }

    public void caseTTTransitions(TTTransitions node)
    {
        defaultCase(node);
    }

    public void caseTTIf(TTIf node)
    {
        defaultCase(node);
    }

    public void caseTTIn(TTIn node)
    {
        defaultCase(node);
    }

    public void caseTTMoveto(TTMoveto node)
    {
        defaultCase(node);
    }

    public void caseTTOut(TTOut node)
    {
        defaultCase(node);
    }

    public void caseTTPipe(TTPipe node)
    {
        defaultCase(node);
    }

    public void caseTTShared(TTShared node)
    {
        defaultCase(node);
    }

    public void caseTTStateSignature(TTStateSignature node)
    {
        defaultCase(node);
    }

    public void caseTTStatic(TTStatic node)
    {
        defaultCase(node);
    }

    public void caseTTThen(TTThen node)
    {
        defaultCase(node);
    }

    public void caseTTUpdate(TTUpdate node)
    {
        defaultCase(node);
    }

    public void caseTTWith(TTWith node)
    {
        defaultCase(node);
    }

    public void caseTTWithGrounding(TTWithGrounding node)
    {
        defaultCase(node);
    }

    public void caseTTApplieschoreography(TTApplieschoreography node)
    {
        defaultCase(node);
    }

    public void caseTTInvokeservice(TTInvokeservice node)
    {
        defaultCase(node);
    }

    public void caseTTApplymediation(TTApplymediation node)
    {
        defaultCase(node);
    }

    public void caseTTActivitygroup(TTActivitygroup node)
    {
        defaultCase(node);
    }

    public void caseTTActivitydiagram(TTActivitydiagram node)
    {
        defaultCase(node);
    }

    public void caseTTGeneralaction(TTGeneralaction node)
    {
        defaultCase(node);
    }

    public void caseTTAdmediator(TTAdmediator node)
    {
        defaultCase(node);
    }

    public void caseTTAggregation(TTAggregation node)
    {
        defaultCase(node);
    }

    public void caseTTFlowstart(TTFlowstart node)
    {
        defaultCase(node);
    }

    public void caseTTFlowfinal(TTFlowfinal node)
    {
        defaultCase(node);
    }

    public void caseTTActivityfinal(TTActivityfinal node)
    {
        defaultCase(node);
    }

    public void caseTTExtraction(TTExtraction node)
    {
        defaultCase(node);
    }

    public void caseTTFork(TTFork node)
    {
        defaultCase(node);
    }

    public void caseTTJoin(TTJoin node)
    {
        defaultCase(node);
    }

    public void caseTTDecision(TTDecision node)
    {
        defaultCase(node);
    }

    public void caseTTMerge(TTMerge node)
    {
        defaultCase(node);
    }

    public void caseTTSendeventaction(TTSendeventaction node)
    {
        defaultCase(node);
    }

    public void caseTTAccepteventaction(TTAccepteventaction node)
    {
        defaultCase(node);
    }

    public void caseTTInputpin(TTInputpin node)
    {
        defaultCase(node);
    }

    public void caseTTInterruptibleregion(TTInterruptibleregion node)
    {
        defaultCase(node);
    }

    public void caseTTObjectnode(TTObjectnode node)
    {
        defaultCase(node);
    }

    public void caseTTOutputpin(TTOutputpin node)
    {
        defaultCase(node);
    }

    public void caseTTOperation(TTOperation node)
    {
        defaultCase(node);
    }

    public void caseTTControlflow(TTControlflow node)
    {
        defaultCase(node);
    }

    public void caseTTDataflow(TTDataflow node)
    {
        defaultCase(node);
    }

    public void caseTTGuard(TTGuard node)
    {
        defaultCase(node);
    }

    public void caseTTElse(TTElse node)
    {
        defaultCase(node);
    }

    public void caseTTStartnode(TTStartnode node)
    {
        defaultCase(node);
    }

    public void caseTTInterrupts(TTInterrupts node)
    {
        defaultCase(node);
    }

    public void caseTTSslink(TTSslink node)
    {
        defaultCase(node);
    }

    public void caseTTCarriesconcept(TTCarriesconcept node)
    {
        defaultCase(node);
    }

    public void caseTTPartnerlink(TTPartnerlink node)
    {
        defaultCase(node);
    }

    public void caseTTEnables(TTEnables node)
    {
        defaultCase(node);
    }

    public void caseTTCashewworkflow(TTCashewworkflow node)
    {
        defaultCase(node);
    }

    public void caseTTDefines(TTDefines node)
    {
        defaultCase(node);
    }

    public void caseTTSequential(TTSequential node)
    {
        defaultCase(node);
    }

    public void caseTTConcurrent(TTConcurrent node)
    {
        defaultCase(node);
    }

    public void caseTTInterleaved(TTInterleaved node)
    {
        defaultCase(node);
    }

    public void caseTTXor(TTXor node)
    {
        defaultCase(node);
    }

    public void caseTTWhile(TTWhile node)
    {
        defaultCase(node);
    }

    public void caseTTUntil(TTUntil node)
    {
        defaultCase(node);
    }

    public void caseTTDeferredchoice(TTDeferredchoice node)
    {
        defaultCase(node);
    }

    public void caseTTDeferredwhile(TTDeferredwhile node)
    {
        defaultCase(node);
    }

    public void caseTTDeferreduntil(TTDeferreduntil node)
    {
        defaultCase(node);
    }

    public void caseTTUnless(TTUnless node)
    {
        defaultCase(node);
    }

    public void caseTTRepeat(TTRepeat node)
    {
        defaultCase(node);
    }

    public void caseTTDataflowmediators(TTDataflowmediators node)
    {
        defaultCase(node);
    }

    public void caseTVariable(TVariable node)
    {
        defaultCase(node);
    }

    public void caseTAnonymous(TAnonymous node)
    {
        defaultCase(node);
    }

    public void caseTNbAnonymous(TNbAnonymous node)
    {
        defaultCase(node);
    }

    public void caseTPosInteger(TPosInteger node)
    {
        defaultCase(node);
    }

    public void caseTPosDecimal(TPosDecimal node)
    {
        defaultCase(node);
    }

    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    public void caseTFullIri(TFullIri node)
    {
        defaultCase(node);
    }

    public void caseTName(TName node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(Node node)
    {
    }
}
